{"config":{"lang":["da"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Grundl\u00e6ggende HTML og CSS","text":"<p>Moderne webudvikling er centreret omkring tre teknologier \u2013 HTML (HyperText Markup Language), CSS (Cascading Style Sheets) og JS (JavaScript). HTML beskriver indholdet p\u00e5 en webside, CSS h\u00e5ndterer pr\u00e6sentationen af indholdet og JavaScript h\u00e5ndterer dynamikken. P\u00e5 dette kursus f\u00e5r du, ved hj\u00e6lp af teori og \u00f8velser, en grundl\u00e6ggende forst\u00e5else for hvordan en HTML-side er opbygget, og hvordan designet kan tilpasses ved hj\u00e6lp af CSS.</p>"},{"location":"index.html#deltagerprofil","title":"Deltagerprofil","text":"<p>Kurset henvender sig til alle, der \u00f8nsker at arbejde med webdesign og/eller webudvikling. Det er ogs\u00e5 velegnet til marketingmedarbejdere, der \u00f8nsker at f\u00e5 en bedre forst\u00e5else for nogle af de tekniske elementer omkring online-markedsf\u00f8ring.</p> <p>Kurset anbefales som introkursus f\u00f8r vores kursus om JavaScript.</p>"},{"location":"index.html#udbytte","title":"Udbytte","text":"<ul> <li>Bliv introduceret til webudvikling og dets historie</li> <li>F\u00e5 en grundl\u00e6ggende forst\u00e5else for, hvordan en side er opbygget med HTML og designet med CSS</li> <li>L\u00e6r sammenh\u00e6ngen mellem HTML og CSS</li> </ul>"},{"location":"index.html#om-materialet","title":"Om materialet","text":"<p>Materialet er udarbejdet af Michell Cronberg og du kan finde hele materialet som en zip-fil. Bem\u00e6rk venligst, at materialet ikke m\u00e5 benyttes uden specifik tilladelse.</p> <p>Download materiale</p>"},{"location":"chat.html","title":"Chat","text":"<p>I forbindelse med undervisning kan det v\u00e6re en fordel at kunne kommunikere via en chat. Jeg har derfor tilf\u00f8jet en mulighed for at benytte en simple chat specifikt til dette kursus.</p> <p>Klik her for \u00e5bne chat i et nyt vindue</p> <p>Bem\u00e6rk, at chat\u2019ens historik kun vil v\u00e6re tilg\u00e6ngelig et begr\u00e6nset tidsrum efter kurset.</p>"},{"location":"cssegenskaber.html","title":"CSS egenskaber","text":""},{"location":"cssegenskaber.html#nye-og-gamle-egenskaber","title":"Nye og gamle egenskaber","text":"<p>CSS er som bekendt under W3C og de s\u00f8rger for l\u00f8bende af opdatere og frigive nye moduler. Det kan dog nogen gange v\u00e6re lidt en udfordring at finde ud af hvilke egenskaber som med sikkerhed kan bruges. Det skyldes is\u00e6r ogs\u00e5, at de nye browsere kan have implementeret en egenskab lang tid inden den er i REC fra W3C.</p> <p>Alle REC moduler kan uden problemer benyttes og andre moduler kan man f\u00e5 et overblik over p\u00e5\u00a0https://www.caniuse.com\u00a0(se elsempelvis\u00a0sticky. At canuise.com siger god for en egenskab betyder dog ikke n\u00f8dvendigvis, at egenskaberne er implementeret og man b\u00f8r derfor altid foretage test - eventuelt ved hj\u00e6lp af sites som\u00a0https://www.browserstack.com/.</p>"},{"location":"cssegenskaber.html#css-vendor-prefixes","title":"CSS Vendor Prefixes","text":"<p>Ved brug af de helt nye egenskaber skal der eventuelt benyttes et prefix for at fort\u00e6lle browseren at man \u00f8nsker en ny feature. Her er eksempelvis prefix brugt i forbindelse med animation.</p> <pre><code>p {\n-webkit-transition: all 4s ease;\n-moz-transition: all 4s ease;\n-ms-transition: all 4s ease;\n-o-transition: all 4s ease;\ntransition: all 4s ease;\n}\n</code></pre> <p>Browserne har forskellige koder:</p> <ul> <li>Android: -webkit-</li> <li>Chrome: -webkit-</li> <li>Firefox: -moz-</li> <li>Internet Explorer: -ms-</li> <li>iOS: -webkit-</li> <li>Opera: -o-</li> <li>Safari: -webkit-</li> </ul> <p>Det er ikke s\u00e5 tit du ser brug af prefix efterh\u00e5nden, men et site som\u00a0https://autoprefixer.github.io/\u00a0giver en nem mulighed for at sikre at man benytter de prefix man skal.</p>"},{"location":"cssegenskaber.html#tekster","title":"Tekster","text":"<p>Der er et hav af egenskaber relateret til tekster.</p>"},{"location":"cssegenskaber.html#fonte","title":"Fonte","text":"<p>Alle de interne fonte i browseren kan benyttes direkte med \u2018font-family\u2019. Hvis en font ikke findes faldes der tilbage p\u00e5 andre mere generelle fonte.</p> <pre><code>p {\nfont-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n</code></pre> <p>Men det er ogs\u00e5 muligt at benytte eksterne fonte</p> <ul> <li>WOFF-format</li> <li>True Type-format</li> </ul> <p>De kan eksempelvis hentes hos\u00a0Google fonts\u00a0ved hj\u00e6lp af @font-face:</p> <pre><code>@font-face {\nfont-family: \"Shadows Into Light\";\nfont-style: normal;\nfont-weight: 400;\nsrc: local(\"Shadows Into Light\"), local(\"ShadowsIntoLight\"),\nurl(https://fonts.gstatic.com/s/shadowsintolight/v7/UqyNK9UOIntux_czAvDQx_ZcHqZXBNQzdcD5.woff2)\nformat(\"woff2\");\nunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6,\nU+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193,\nU+2212, U+2215, U+FEFF, U+FFFD;\n}\np {\nfont-family: \"Shadows Into Light\", sans-serif;\n}\n</code></pre>"},{"location":"cssegenskaber.html#strrelse","title":"St\u00f8rrelse","text":"<p>St\u00f8rrelse er ikke bare relateret til tekster men ogs\u00e5 til bokse mv. De kan angives p\u00e5 flere m\u00e5der</p> <ul> <li>px<ul> <li>pixel</li> </ul> </li> <li>%<ul> <li>procent</li> </ul> </li> <li>em<ul> <li>relativt til mor<ul> <li>2em (2 x mor)</li> <li>0.5em (1/2 mor)</li> </ul> </li> </ul> </li> <li>rem<ul> <li>relativ til rod</li> </ul> </li> <li>pt<ul> <li>points</li> </ul> </li> <li>vw<ul> <li>relativt til viewport</li> </ul> </li> </ul> <p>I relation til tekster benyttes px og eventuelt efterf\u00f8lgende em/rem.</p> <pre><code>section {\nfont-size: 12px;\n}\nsection p {\nfont-size: 0.8em;\n}\n</code></pre>"},{"location":"cssegenskaber.html#style","title":"Style","text":"<p>Der findes en masse opm\u00e6rkninger relateret til styling af tekst</p> <ul> <li>font-style<ul> <li>italic</li> </ul> </li> <li>font-weight<ul> <li>bold</li> </ul> </li> <li>font-variant<ul> <li>small-caps</li> </ul> </li> <li>text-transform<ul> <li>lowercase</li> <li>uppercase</li> </ul> </li> <li>text-decoration<ul> <li>underline</li> </ul> </li> <li>text-shadow<ul> <li>h-shadow, v-shadow, blur, color</li> </ul> </li> <li>text-align<ul> <li>left, center, right</li> </ul> </li> <li>vertical-align<ul> <li>top</li> <li>middle</li> <li>bottom</li> </ul> </li> <li>letter-spacing<ul> <li>px</li> </ul> </li> <li>word-spacing<ul> <li>line-height</li> </ul> </li> </ul> <pre><code>.speciel {\nfont-style: italic;\nfont-weight: bold;\ntext-transform: uppercase;\ntext-decoration: underline;\ntext-shadow: 4px 4px 4px red;\n}\n</code></pre>"},{"location":"cssegenskaber.html#kolonner","title":"Kolonner","text":"<p>Opdeling af tekst i kolonner er blevet nemt i de nyere browsere med \u2018columns\u2019:</p> <pre><code>div#col {\nwidth: 500px;\ncolumns: 4;\ncolumn-gap: 20px;\n}\n</code></pre>"},{"location":"cssegenskaber.html#opgaver","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Tekster og fonte\u00a0- I denne opgave skal du arbejde lidt med tekster, fonte med videre.</li> </ul>"},{"location":"cssegenskaber.html#farver","title":"Farver","text":"<p>Forskellige elementer har egenskaber relateret til farver - eksempelvis</p> <ul> <li>tekst<ul> <li>color</li> <li>background-color</li> <li>text-shadow</li> </ul> </li> <li>box<ul> <li>box-shadow</li> <li>border-color</li> </ul> </li> </ul> <p>og farve kan angives p\u00e5 flere m\u00e5der - bla.</p> <ul> <li>ved navn<ul> <li>blue, red, green mv</li> </ul> </li> <li>ved hex<ul> <li><code>#ff000080, #0000ff80</code></li> </ul> </li> <li>ved RGB     <code>rgb(255, 0, 0), rgb(0, 0, 255)</code></li> <li>ved HSL<ul> <li><code>hsl(120, 100%, 50%), hsl(120, 60%, 70%)</code> mv</li> </ul> </li> </ul> <p>Her er et par eksempler:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Demo&lt;/title&gt;\n&lt;style&gt;\nh1:nth-child(1) {\ncolor: red;\n}\nh1:nth-child(2) {\ncolor: rgb(0, 0, 255);\n}\nh1:nth-child(3) {\ncolor: hsl(120, 100%, 50%);\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Test&lt;/h1&gt;\n&lt;h1&gt;Test&lt;/h1&gt;\n&lt;h1&gt;Test&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cssegenskaber.html#box-model","title":"Box model","text":"<p>Alle blok elementer kan defindes som en boks:</p> <p></p> <p>billede ref</p> <p>En boks har forskellige egenskaber der kan benyttes</p> <ul> <li>margin</li> <li>border</li> <li>padding</li> <li>height</li> <li>width<ul> <li>max-width</li> </ul> </li> <li>border-radius</li> <li>box-shadow</li> </ul> <p>Her er et eksempel:</p> <pre><code>div#box {\nwidth: 100px;\nheight: 100px;\nbackground-color: yellow;\nborder: 1px solid black;\npadding: 5px;\nmargin: 5px;\nborder-radius: 10px;\nbox-shadow: 10px 10px 10px black;\n}\n</code></pre>"},{"location":"cssegenskaber.html#opgaver_1","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Box-modellen\u00a0- Simpel opgave i brug af box-modellen i CSS</li> </ul>"},{"location":"cssegenskaber.html#synlighed","title":"Synlighed","text":"<p>Der kan tit v\u00e6re behov for at skjule/vise elementer</p> <ul> <li>display<ul> <li>skjul/vis element (tilf\u00f8jer/fjerner element i rendering)</li> </ul> </li> <li>visibility<ul> <li>skjul/vis element (viser/skjuler blot)</li> </ul> </li> </ul> <pre><code>div#display {\n/* display: none; */\nvisibility: hidden;\n}\n</code></pre>"},{"location":"cssegenskaber.html#positionering","title":"Positionering","text":"<p>Blok-elementer kan placeres i forhold til hinanden p\u00e5 forskellig vis.</p>"},{"location":"cssegenskaber.html#position-egenskaben","title":"position-egenskaben","text":"<ul> <li>static</li> <li>relative<ul> <li>relativ til den oprindelige position</li> </ul> </li> <li>absolute<ul> <li>realtiv til mor</li> </ul> </li> <li>fixed</li> <li>sticky</li> </ul>"},{"location":"cssegenskaber.html#placering","title":"Placering","text":"<ul> <li>top/bottom</li> <li>left/right</li> <li>z-index</li> </ul> <p>Her er et eksempel p\u00e5 en boks placeres relativt.</p> <pre><code>div#pos {\nposition: relative;\nleft: 20px;\ntop: 20px;\nz-index: -1;\n}\n</code></pre>"},{"location":"cssegenskaber.html#float","title":"Float","text":"<p>Float kan benyttes til at placere elementer i forhold til hinanden (venstre/h\u00f8jre). Pr\u00f8v f\u00f8lgende html</p> <pre><code>&lt;!-- https://developer.mozilla.org/en-US/docs/Web/CSS/float --&gt;\n&lt;section&gt;\n&lt;div class=\"left\"&gt;1&lt;/div&gt;\n&lt;div class=\"right\"&gt;2&lt;/div&gt;\n&lt;p&gt;\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tristique sapien ac erat tincidunt, sit amet dignissim lectus vulputate. Donec id iaculis velit. Aliquam vel malesuada erat.\nPraesent non magna ac massa aliquet tincidunt vel in massa. Phasellus feugiat est vel leo finibus congue.\n&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>med f\u00f8lgende css</p> <pre><code>section {\nborder: 1px solid blue;\n}\nsection div {\nmargin: 5px;\nwidth: 50px;\nheight: 50px;\n}\nsection .left {\nfloat: left;\nbackground: pink;\n}\nsection .right {\nfloat: right;\nbackground: cyan;\n}\n</code></pre> <p>eller f\u00f8lgende html</p> <pre><code>&lt;div id=\"container\"&gt;\n&lt;p&gt;\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tristique sapien ac erat tincidunt, sit amet dignissim lectus vulputate. Donec id iaculis velit. Aliquam vel malesuada erat.\nPraesent non magna ac massa aliquet tincidunt vel in massa. Phasellus feugiat est vel leo finibus congue.\n&lt;/p&gt;\n&lt;p&gt;\n&lt;img src=\"https://picsum.photos/200\" alt=\"Random\" /&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas odio, vitae\nscelerisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa. Fusce luctus vestibulum augue ut aliquet. Mauris ante ligula, facilisis sed ornare eu,\nlobortis in odio. Praesent convallis urna a lacus interdum ut hendrerit risus congue. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc venenatis imperdiet\nsed ornare turpis. Donec vitae dui eget tellus gravida venenatis. Integer fringilla congue eros non fermentum. Sed dapibus pulvinar nibh tempor porta. Cras ac leo purus. Mauris quis diam\nvelit.\n&lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <p>med f\u00f8lgende css</p> <pre><code>#container {\nwidth: 600px;\n}\n#container img {\nfloat: right;\nmargin-left: 10px;\n}\n</code></pre>"},{"location":"cssegenskaber.html#flexbox","title":"Flexbox","text":"<p>En flexbox er en nyere m\u00e5de at placere elementer i forhold til hinanden, og giver en masse muligheder for</p> <ul> <li>plads mellem elementer</li> <li>sortering</li> <li>flow</li> <li>justering</li> </ul> <p>Pr\u00f8v eksempelvis\u00a0https://flexbox.help/\u00a0eller dette eksempel p\u00e5 en simpel flexbox:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Flex&lt;/title&gt;\n&lt;style&gt;\n.box div {\nwidth: 50px;\nheight: 50px;\nmargin: 10px;\nbackground-color: antiquewhite;\n}\n.box {\nwidth: 300px;\nheight: 300px;\ndisplay: flex;\nflex-direction: row;\n/* flex-direction: row-reverse; */\n/* flex-direction: column; */\n/* flex-direction: column-reverse;  */\nbackground-color: red;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"box\"&gt;\n&lt;div&gt;1&lt;/div&gt;\n&lt;div&gt;2&lt;/div&gt;\n&lt;div&gt;3&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Pr\u00f8v at rette flex-direction.</p> <p>Et andet eksempel er det klassiske holy-grail-of-design - check\u00a0https://codepen.io/takeradi/pen/MyYqKX\u00a0eller</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Holy Grale&lt;/title&gt;\n&lt;style&gt;\nbody {\ndisplay: flex;\nflex-direction: column;\nmin-height: 100px;\ntext-align: center;\n}\nbody .header {\nwidth: 100%;\nheight: 60px;\nbackground: pink;\n}\nbody .holygrail-body {\nflex: 1 0 auto;\ndisplay: flex;\n}\nbody .holygrail-body .content {\nflex: 1 0 auto;\nbackground: lightgreen;\n}\nbody .holygrail-body .nav {\nwidth: 100px;\nlist-style: none;\ntext-align: left;\norder: -1;\nbackground: yellow;\nmargin: 0;\n}\nbody .holygrail-body .aside {\nwidth: 100px;\nbackground: orange;\n}\nbody .footer {\nwidth: 100%;\nheight: 60px;\nbackground: cyan;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;header class=\"header\"&gt;Header&lt;/header&gt;\n&lt;div class=\"holygrail-body\"&gt;\n&lt;div class=\"content\"&gt;Content&lt;/div&gt;\n&lt;ul class=\"nav\"&gt;\n&lt;li&gt;Menu 1&lt;/li&gt;\n&lt;li&gt;Menu 2&lt;/li&gt;\n&lt;li&gt;Menu 3&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=\"aside\"&gt;Aside&lt;/div&gt;\n&lt;/div&gt;\n&lt;footer class=\"footer\"&gt;Footer&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cssegenskaber.html#responsive-design","title":"Responsive design","text":"<p>Responsive design handler om at skabe et design som er baseret p\u00e5 en aktuel tilstand i browseren som eksempelvis st\u00f8rrelse af viewport, rendering til browser/print eller konkret opl\u00f8sning.</p>"},{"location":"cssegenskaber.html#media-typer","title":"Media typer","text":"<p>Oprindeligt startede det med media typer som bruges til at skelne mellem desktop/print. Se f\u00f8lgende eksempel:</p> <pre><code>&lt;div id=\"mtype\"&gt;\nLorem, ipsum dolor sit amet consectetur adipisicing elit.\n&lt;/div&gt;\n</code></pre> <p>med f\u00f8lgende css:</p> <pre><code>div#mtype {\ncolor: red;\n}\n@media print {\ndiv#mtype {\ncolor: black;\n}\n}\n</code></pre>"},{"location":"cssegenskaber.html#media-queries","title":"Media queries","text":"<p>I den mere avancerede form kan media queries bruges til at skelne mellem forskellige st\u00f8rrelser og opl\u00f8sninger. Pr\u00f8v f\u00f8lgende:</p> <pre><code>&lt;div id=\"qtype\"&gt;\nLorem ipsum dolor sit amet consectetur adipisicing elit. Molestias fuga ad maiores nesciunt\nvoluptatibus facere reiciendis. Beatae repellendus, sint provident iusto distinctio cumque\nvoluptatibus deleniti cupiditate eveniet nobis iure eos!\n&lt;/div&gt;\n</code></pre> <p>med denne css:</p> <pre><code>div#qtype {\ncolor: black;\n}\n@media only screen and (min-width: 400px) {\ndiv#qtype {\ncolor: red;\n}\n}\n@media only screen and (min-width: 800px) {\ndiv#qtype {\ncolor: blue;\n}\n}\n@media only screen and (min-width: 1000px) {\ndiv#qtype {\ncolor: green;\n}\n}\n</code></pre> <p>Se\u00a0University of Vermont\u00a0som har et flot responsive design.</p>"},{"location":"cssegenskaber.html#opgaver_2","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Mediatyper\u00a0- I denne opgave skal du pr\u00f8ve at lege med den simple form for dynamisk css</li> <li>Leg med media queries\u00a0- I denne opgave skal du bruge media queries til \u00e6ndre farve afh\u00e6ngig af browserens st\u00f8rrelse.</li> </ul>"},{"location":"cssegenskaber.html#animationer","title":"Animationer","text":"<p>Animationer er en del af moderne css og erstatter til en hvis grad brug af JavaScript.</p>"},{"location":"cssegenskaber.html#transforms","title":"Transforms","text":"<p>Brug af transforms ligger til grund for animationer og g\u00f8r det muligt at skalere, rotere, flytte og vride elementer:</p> <ul> <li>scale</li> <li>rotate</li> <li>translate</li> <li>skew</li> </ul> <p>Pr\u00f8v f\u00f8lgende:</p> <pre><code>&lt;div id=\"transf\"&gt;\nLorem ipsum dolor sit amet consectetur adipisicing elit. Molestias fuga ad maiores nesciunt\nvoluptatibus facere reiciendis. Beatae repellendus, sint provident iusto distinctio cumque\nvoluptatibus deleniti cupiditate eveniet nobis iure eos!\n&lt;/div&gt;\n</code></pre> <p>med denne css:</p> <pre><code>div#transf {\nwidth: 400px;\ntransform: rotate(-5deg);\n}\n</code></pre>"},{"location":"cssegenskaber.html#transitions","title":"Transitions","text":"<p>Transforms kan s\u00e5 efterf\u00f8lgende benyttes i transitions:</p> <p></p> <p>billed ref</p> <p>Pr\u00f8v f\u00f8lgende:</p> <pre><code>&lt;div id=\"trans\"&gt;\nLorem ipsum dolor sit amet consectetur adipisicing elit. Molestias fuga ad maiores nesciunt\nvoluptatibus facere reiciendis. Beatae repellendus, sint provident iusto distinctio cumque\nvoluptatibus deleniti cupiditate eveniet nobis iure eos!\n&lt;/div&gt;\n</code></pre> <p>med dette css:</p> <pre><code>div#trans {\nwidth: 400px;\nbackground-color: yellow;\ntransition-duration: 2s;\n}\ndiv#trans:hover {\nbackground-color: red;\n}\n</code></pre>"},{"location":"cssegenskaber.html#keyframe-animation","title":"KeyFrame Animation","text":"<p>KeyFrame Animations er n\u00e6ste skridt og giver mulighed for at skabe en komplet animation</p> <pre><code>&lt;div id=\"kf\"&gt;\nLorem ipsum\n&lt;/div&gt;\n</code></pre> <p>Pr\u00f8v f\u00f8lgende css:</p> <pre><code>div#kf {\nwidth: 100px;\nheight: 100px;\nposition: relative;\nanimation: boxani 5s;\n}\n@keyframes boxani {\n0% {\nbackground: green;\nleft: 0px;\ntop: 0px;\n}\n25% {\nbackground: blue;\nleft: 150px;\ntop: 0px;\n}\n50% {\nbackground: red;\nleft: 150px;\ntop: 150px;\n}\n75% {\nbackground: yellow;\nleft: 0px;\ntop: 150px;\n}\n100% {\nbackground: green;\nleft: 0px;\ntop: 0px;\n}\n}\n</code></pre>"},{"location":"cssegenskaber.html#css-biblioteker","title":"CSS biblioteker","text":"<p>Der findes flere biblioteker med css predefinerede animationer - se eksempelvis</p> <ul> <li>animatecss</li> <li>animista</li> </ul>"},{"location":"cssegenskaber.html#opgaver_3","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Animationer\u00a0- I denne opgave skal du skabe en simpel CSS transition.</li> </ul>"},{"location":"cssegenskaber.html#funktioner","title":"Funktioner","text":"<p>I nyere browsere kan diverse CSS funktioner benyttes - men check https:www.caniuse.com for en god ordens skyld.</p>"},{"location":"cssegenskaber.html#variabler","title":"variabler","text":"<pre><code>:root {\n--main-bg-color: coral;\n--main-txt-color: blue;\n--main-padding: 15px;\n}\nh1 {\ncolor: var(--main-txt-color);\n}\ndiv {\ncolor: var(--main-txt-color);\nbackground-color: var(--main-bg-color);\npadding: var(--main-padding);\n}\n</code></pre>"},{"location":"cssegenskaber.html#beregninger","title":"Beregninger","text":"<p>Beregninger kan ske med calc. Her et responsive banner:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Banner&lt;/title&gt;\n&lt;style&gt;\n.banner {\nposition: absolute;\nleft: 90px;\nwidth: calc(100% - 180px);\nborder: solid black 1px;\nbackground-color: thistle;\ntext-align: center;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"banner\"&gt;Banner!&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cssegenskaber.html#attribut-funktioner","title":"Attribut funktioner","text":"<p>attr kan eksempelvis benyttes til at benytte v\u00e6rdien fra en attribut:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Attr demo&lt;/title&gt;\n&lt;style&gt;\na::after {\ncontent: \"[\" attr(href) \"]\";\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=\"https://www.google.dk\"&gt;&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cssselector.html","title":"CSS selectorer","text":""},{"location":"cssselector.html#simple-selectorer","title":"Simple selectorer","text":"<p>En CSS selector er en s\u00f8ge streng som browseren benytter til at finde de elementer der skal p\u00e5virkes af CSS. Den kan v\u00e6re meget simpel men ogs\u00e5 ret n\u00f8rded.</p> <p>I det f\u00f8lgende gennemg\u00e5s de helt simple.</p>"},{"location":"cssselector.html#element-selector","title":"Element selector","text":"<p>Hvis man blot \u00f8nsker at finde alle konkrete opm\u00e6rkninger som eksempelvis alle h1, alle div, alle li med videre kan element selector\u2019en benyttes.</p> <p>HTML:</p> <pre><code>&lt;h1&gt;...&lt;/h1&gt;\n&lt;div&gt;...&lt;/div&gt;\n&lt;div&gt;...&lt;/div&gt;\n</code></pre> <p>CSS:</p> <pre><code>/* Alle div */\ndiv {\n/* egenskaber */\n}\n/* Alle h1 */\nh1 {\n/* egenskaber */\n}\n</code></pre> <p>Man kan eventuelt benytte , som OR operator</p> <pre><code>h1,\nh2,\nh3,\ndiv,\np {\n/* egenskaber */\n}\n</code></pre> <p>En selector kan ogs\u00e5 lede igennem et tr\u00e6 ved at benytte mellemrum</p> <pre><code>/* alle p under div */\ndiv p {\n/* egenskaber */\n}\n/* alle a under p under div */\ndiv p a {\n/* egenskaber */\n}\n</code></pre>"},{"location":"cssselector.html#id","title":"Id","text":"<p>I HTML er det en valideringsfejl hvis flere elementer har samme id-attribut, og hvis man \u00f8nsker at finde et unikt element med et id kan \u201c#\u201d benyttes.</p> <p>Med udgangspunkt i HTML som</p> <pre><code>&lt;h1 id=\"minOv\"&gt;...&lt;/h1&gt;\n</code></pre> <p>kan h1\u2019eren findes med</p> <pre><code>#minOv {\n/* egenskaber */\n}\n</code></pre> <p>Man kan eventuel hj\u00e6lpe browseren lidt med s\u00f8gningen ved at fort\u00e6lle, at den skal lede i h1\u2019ere</p> <pre><code>h1#minOv {\n/* egenskaber */\n}\n</code></pre>"},{"location":"cssselector.html#klasse","title":"Klasse","text":"<p>I HTML kan et element indeholder flere klasser, og flere elementer kan indeholde samme klasse.</p> <pre><code>&lt;h1 class=\"ov r\u00f8d streg\"&gt;...&lt;/h1&gt;\n&lt;p class=\"r\u00f8d\"&gt;...&lt;/p&gt;\n</code></pre> <p>Hvis man \u00f8nsker at finde elementer med klasser kan \u201c.\u201d benyttes. Med udgangspunkt i HTML som</p> <pre><code>&lt;h1 class=\"r\u00f8d\"&gt;...&lt;/h1&gt;\n&lt;p class=\"r\u00f8d\"&gt;...&lt;/p&gt;\n</code></pre> <p>kan alle elementer med klassen r\u00f8d findes med</p> <pre><code>.r\u00f8d {\n/* egenskaber */\n}\n</code></pre> <p>Hvis man kun \u00f8nsker alle p-opm\u00e6rkninger med klassen r\u00f8d kan \u201c.\u201d kombineres med en element-selector:</p> <pre><code>p.r\u00f8d {\n/* egenskaber */\n}\n</code></pre> <p>hvilket kan overs\u00e6ttes til alle p-opm\u00e6rkninger med klassen r\u00f8d.</p>"},{"location":"cssselector.html#nedarvning","title":"Nedarvning","text":"<p>CSS benytter nedarvning s\u00e5ledes, at de fleste elementer arver fra \u201cmor\u201d (dog ikke input, textarea mv). I f\u00f8lgende HTML</p> <pre><code>&lt;div id=\"div1\"&gt;\n&lt;span&gt;Test&lt;/span&gt;\n&lt;/div&gt;\n</code></pre> <p>og f\u00f8lgende CSS:</p> <pre><code>div#div1 {\n/* alt under div bliver r\u00f8dt */\ncolor: red;\n}\n</code></pre> <p>vil alt under #div1 blive r\u00f8dt - herunder span-elementet.</p>"},{"location":"cssselector.html#opgaver","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>CSS Diner\u00a0- Sjov opgave relateret til CSS selector. Se evt. l\u00f8sning</li> </ul>"},{"location":"cssselector.html#avancerede-selectorer","title":"Avancerede selectorer","text":"<p>I det f\u00f8lgende gennemg\u00e5s nogle af de mere avancerede selctorer, men der er mange flere. Se evt.\u00a0https://www.w3schools.com/cssref/css_selectors.asp.</p>"},{"location":"cssselector.html#morbarn","title":"Mor/Barn","text":"<p>Hvis du kan vil finde elementer som er placeret lige under et andet element kan du bruge &gt;</p> <pre><code>div &gt; p {\n}\n</code></pre>"},{"location":"cssselector.html#naboer","title":"Naboer","text":"<p>Elementer ved siden af hinanden kan findes med +</p> <pre><code>div + p {\n}\n</code></pre>"},{"location":"cssselector.html#attribute","title":"Attribute ([])","text":"<p>Med en attribute-selector kan du finde elementer med attributter p\u00e5 forskellig m\u00e5de. Her er et par eksempler.</p> <pre><code>/* billeder med en alt-attribute */\nimg[alt] {\n/* egenskaber */\n}\n/* links med en target-attribute */\na[target] {\n/* egenskaber */\n}\n/* links med en target-attribute='_blank' */\na[target=\"_blank\"] {\n/* egenskaber */\n}\n/* billeder hvor alt indeholder et ord */\nimg[alt*=\"vand\"] {\n/* egenskaber */\n}\n</code></pre>"},{"location":"cssselector.html#pseudo-class","title":"Pseudo Class (:)","text":"<p>Brug af en pseudo class selector giver mulighed for yderligere at filtrere en s\u00f8gning. Et typisk eksempel er link: som defienerer forskellige tilstande et link kan have:</p> <ul> <li>a:link</li> <li>a:visited</li> <li>a:active</li> <li>a:hover</li> </ul> <p>Eksempelvis:</p> <pre><code>/* unvisited link */\na:link {\n/* egenskaber */\n}\n/* visited link */\na:visited {\n/* egenskaber */\n}\n/* mus over link */\na:hover {\n/* egenskaber */\n}\n/* selected link */\na:active {\n/* egenskaber */\n}\n</code></pre> <p>Men der findes en del flere - herunder mulighed for at finde elementer i en liste:</p> <pre><code>/* f\u00f8rste i under p */\np i:first-child {\n/* egenskaber */\n}\n/* alle i under f\u00f8rste p */\np:first-child i {\n/* egenskaber */\n}\n/* 2. li under ul */\nul li:ntn-child(2) {\n/* egenskaber */\n}\n/* hver anden li under ul */\nul li:ntn-child(even) {\n/* egenskaber */\n}\n</code></pre>"},{"location":"cssselector.html#pseudo-elements","title":"Pseudo Elements (::)","text":"<p>Pseudo elementer kr\u00e6ver at browseren foretager nogle beregninger. W3C forventer et pseudo element tilf\u00f8jet efter to kolon (::) men de fleste browsere kan h\u00e5ndtere et enkelt kolon (:).</p> <pre><code>p::first-line {\n/* egenskaber */\n}\np::first-letter {\n/* egenskaber */\n}\n/* f\u00f8r og efter hvert link - typisk brugt til at tilf\u00f8je tekst med 'content' */\na::before {\n}\na::after {\n}\n</code></pre>"},{"location":"cssselector.html#opgaver_1","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Brug CSS selectorer\u00a0- Dette er en simpel opgave i brugen af forskellige CSS selectors i browseren.</li> </ul>"},{"location":"cssselector.html#specificity","title":"Specificity","text":"<p>Hvis et element findes af flere selectorer beregner browseren hvilken der vinder:</p> <ul> <li>Antal af id</li> <li>Antal af klasser, attributter, pseudo klasser</li> <li>Antal elementer og pseudo elementer</li> </ul> <p>dog har inline/r\u00e6kkef\u00f8lge pr\u00e6sedens.</p> <p>Se f\u00f8lgende html:</p> <pre><code>&lt;div id=\"d1\"&gt;\n&lt;span id=\"s1\" class=\"c1\"&gt;\nTest\n&lt;/span&gt;\n&lt;/div&gt;\n</code></pre> <p>og denne css:</p> <pre><code>/* 2 id, 2 elementer =  202 */\ndiv#d1 span#s1 {\n/* VINDER */\ncolor: green;\n}\n/* 2 elementer =  002 */\ndiv span {\ncolor: red;\n}\n/* 1 klasse, 2 elementer =  012 */\ndiv span.c1 {\ncolor: blue;\n}\n/* 1 klasse, 1 id, 2 elementer =  112 */\ndiv#d1 span.c1 {\ncolor: pink;\n}\n</code></pre> <p>Brig Visual Studio Code\u2019s popup i CSS filer til at se resultat af beregning.</p>"},{"location":"cssselector.html#vrktj-til-selectorer","title":"V\u00e6rkt\u00f8j til selectorer","text":"<p>Der er flere hj\u00e6lpemidler til at skrive/forst\u00e5 en CSS selector.</p>"},{"location":"cssselector.html#chrome-f12elements","title":"Chrome F12/Elements","text":"<p>Brug ctrl+s for at s\u00f8ge efter elementer med en eller flere selectorer.</p>"},{"location":"cssselector.html#chrome-f12console","title":"Chrome F12/Console","text":"<p>I Chrome kan du bruge console i F12-v\u00e6rkt\u00f8jet til at s\u00f8ge direkte p\u00e5 en side:</p> <pre><code>$$(\"...selector...\")\n</code></pre> <p>og trykke enter.</p> <p>S\u00e5ledes vil</p> <pre><code>$$(\"h1\")\n</code></pre> <p>vise alle h1\u2019ere p\u00e5 den p\u00e5g\u00e6ldende side.</p>"},{"location":"cssselector.html#chrome-extensions","title":"Chrome extensions","text":"<p>Der er flere extensions til Chrome som kan g\u00f8re det nemt at finde den rigtige extension. Pr\u00f8v</p> <ul> <li>CSS Selector Helper for Chrome</li> <li>SelectorGadget</li> </ul>"},{"location":"htmltags.html","title":"HTML opm\u00e6rkninger","text":""},{"location":"htmltags.html#opmrkningerne-div-og-span","title":"Opm\u00e6rkningerne div og span","text":"<p>De mest grundl\u00e6ggende opm\u00e6rkninger med meget begr\u00e6nset styling i browserens eget style sheet er div- og span-opm\u00e6rkningerne. De kan derfor bruges til \u201chvad som helst\u201d fordi de kan styles som det \u00f8nskes.</p> <p>Du kan se div som et blok elementer (renderes under hinanden - som udgangspunkt) og span som et inline element (renderes ved siden af hinanden - som udgangspunkt).</p> <pre><code>&lt;div&gt;blok af tekst&lt;/div&gt;\n&lt;div&gt;blok &lt;span&gt;af&lt;/span&gt; tekst med &lt;span&gt;inline&lt;/span&gt; elementer&lt;/div&gt;\n</code></pre> <p>Ovenn\u00e6vnte opm\u00e6rkninger kan evt tilf\u00f8jes klasser og styles efter behov.</p>"},{"location":"htmltags.html#gruppering","title":"Gruppering","text":"<p>Typisk vil du se div brugt som et grupperingstag (alle opm\u00e6rkninger kan bruges til det - men sematisk er div mest brugt).</p> <pre><code>&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;\n&lt;div&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;/div&gt;\n&lt;div&gt;Quia quas ad sunt odit? Cupiditate omnis quod dolores quas sint.&lt;/div&gt;\n&lt;div&gt;Voluptates ipsam eos totam laudantium cumque repudiandae.&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;/p&gt;\n&lt;img src=\"https://picsum.photos/100\" alt=\"picsum\" /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"htmltags.html#tekster","title":"Tekster","text":"<p>Flere opm\u00e6rkninger er relateret til tekst og grundl\u00e6ggende formatering. Sidstn\u00e6vnte b\u00f8r man dog overveje at g\u00f8re via CSS.</p> <p>Husk at alt er stylet p\u00e5 forh\u00e5nd gennem browserens eget \u201cuser agent stylesheet\u201d.</p>"},{"location":"htmltags.html#kommentarer","title":"Kommentarer","text":"<pre><code>&lt;!-- Kommentar... --&gt;\n&lt;!--\n    Flere kommentarer\n--&gt;\n</code></pre>"},{"location":"htmltags.html#overskrifter","title":"Overskrifter","text":"<pre><code>&lt;h1&gt;Overskrift 1&lt;/h1&gt;\n&lt;h2&gt;Overskrift 2&lt;/h2&gt;\n&lt;h3&gt;Overskrift 3&lt;/h3&gt;\n&lt;h4&gt;Overskrift 4&lt;/h4&gt;\n&lt;h5&gt;Overskrift 5&lt;/h5&gt;\n</code></pre>"},{"location":"htmltags.html#paragraph","title":"Paragraph","text":"<pre><code>&lt;p&gt;\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit\n  dignissimos, aut cupiditate quos, alias maxime reiciendis ipsa esse, eveniet\n  repellendus rerum numquam sed consequuntur. Repellendus inventore beatae\n  accusamus eveniet maiores.\n&lt;/p&gt;\n</code></pre>"},{"location":"htmltags.html#html-encoding","title":"HTML Encoding","text":"Kode Forklaring <code>&amp;nbsp;</code> mellemrum <code>&amp;amp;</code> &amp; <code>&amp;lt;</code> &lt; <code>&amp;gt;</code> &gt; <code>&amp;quot;</code> \u201c <code>&amp;apos;</code> \u2018 <code>&amp;shy;</code> Opdeling af lange ord (se ogs\u00e5\u00a0css) <code>&amp;oslash;</code> \u00f8 <code>&amp;Oslash;</code> \u00d8 <code>&amp;aring;</code> \u00e5 <code>&amp;Aring;</code> \u00c5 <code>&amp;aelig;</code> \u00e6 <code>&amp;AElig;</code> \u00c6 <p>Se ogs\u00e5</p>"},{"location":"htmltags.html#formatering","title":"Formatering","text":"<p>Der findes b, i, og u opm\u00e6rkninger men overvej at bruge CSS</p> <pre><code>&lt;p&gt;\n  Voluptates &lt;b&gt;ipsam&lt;/b&gt; eos &lt;u&gt;totam laudantium&lt;/u&gt; cumque &lt;i&gt;repudiandae&lt;/i&gt;.\n&lt;/p&gt;\n</code></pre> <p>Ovenn\u00e6vnte kan rettes til:</p> <pre><code>&lt;p&gt;\n  Voluptates &lt;span id=\"fed\"&gt;ipsam&lt;/span&gt; eos\n  &lt;span class=\"understreg\"&gt;totam laudantium&lt;/span&gt; cumque\n  &lt;span class=\"kursiv\"&gt;repudiandae&lt;/span&gt;.\n&lt;/p&gt;\n</code></pre> <p>hvorefter der kan tilf\u00f8jes CSS klasser til styring af design.</p>"},{"location":"htmltags.html#linjeskift-og-linje","title":"Linjeskift og linje","text":"<p>Der findes br (linjeskift), og hr (vandret streg) opm\u00e6rkninger men brug CSS i stedet.</p> <pre><code>&lt;p&gt;lorem &lt;br /&gt;ipsum&lt;/p&gt;\n&lt;p&gt;Lorem&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;Ipsum&lt;/p&gt;\n</code></pre>"},{"location":"htmltags.html#opgaver","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Tekster\u00a0- Her kan du arbejde med lidt tekst og formatering.</li> </ul>"},{"location":"htmltags.html#semantik","title":"Semantik","text":"<p>Der findes en del semantiske opm\u00e6rkninger som du kan bruge til at skabe logiske opm\u00e6rkninger</p> <pre><code>&lt;header&gt;&lt;/header&gt;\n&lt;footer&gt;&lt;/footer&gt;\n&lt;section&gt;&lt;/section&gt;\n&lt;article&gt;&lt;/article&gt;\n&lt;aside&gt;&lt;/aside&gt;\n&lt;nav&gt;&lt;/nav&gt;\n&lt;header&gt;\n&lt;section&gt;&lt;/section&gt;\n&lt;section&gt;&lt;/section&gt;\n&lt;/header&gt;\n&lt;section&gt;\n&lt;article&gt;&lt;/article&gt;\n&lt;article&gt;&lt;/article&gt;\n&lt;section&gt;\n&lt;article&gt;&lt;/article&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n</code></pre> <p>Opm\u00e6rkningerne har ingen design og nogle f\u00e5 regler i W3C. Der er s\u00e5ledes frit valg i brugen af dem. Det handler udelukkende om semantik.</p>"},{"location":"htmltags.html#opgaver_1","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Semantik\u00a0- Denne opgave skal give dig lidt \u00f8velse i at skabe en HTML side med semantiske opm\u00e6rkninger.</li> </ul>"},{"location":"htmltags.html#links","title":"Links","text":"<p>Links kan enten v\u00e6re</p> <ul> <li>Inline links</li> <li>Eksterne link</li> </ul> <p>Her er et par eksempler:</p> <pre><code>&lt;p&gt;Quia &lt;a href=\"http://www.google.dk\"&gt;quas ad&lt;/a&gt; sunt odit?&lt;/p&gt;\n&lt;p&gt;Quia &lt;a href=\"side2.html\"&gt;quas ad&lt;/a&gt; sunt odit?&lt;/p&gt;\n&lt;p&gt;Quia &lt;a href=\"#mitId\"&gt;quas ad&lt;/a&gt; sunt odit?&lt;/p&gt;\n&lt;h2 id=\"mitId\"&gt;Overskrift&lt;/h2&gt;\n&lt;!-- Brug af target til at \u00e5bne i en ny fane --&gt;\n&lt;p&gt;\n  Quia &lt;a href=\"http://www.google.dk\" target=\"_blank\"&gt;quas ad&lt;/a&gt; sunt odit?\n&lt;/p&gt;\n</code></pre>"},{"location":"htmltags.html#lister","title":"Lister","text":"<p>Der er to typer af lister</p> <ul> <li>uordnet liste (ul)</li> <li>ordnet liste (ol)</li> </ul> <p>og elementer i listen defineres med en li-opm\u00e6rkning.</p> <pre><code>&lt;ol&gt;\n&lt;li&gt;element 1&lt;/li&gt;\n&lt;li&gt;element 2&lt;/li&gt;\n&lt;li&gt;element 3&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ul&gt;\n&lt;li&gt;element 1&lt;/li&gt;\n&lt;li&gt;element 2&lt;/li&gt;\n&lt;li&gt;element 3&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Det er fuldt muligt at skabe en dyb listestruktur (lister i lister i \u2026)</p> <pre><code>&lt;ol&gt;\n&lt;li&gt;element 1&lt;/li&gt;\n&lt;li&gt;\n&lt;ul&gt;\n&lt;li&gt;element 1a&lt;/li&gt;\n&lt;li&gt;element 1b&lt;/li&gt;\n&lt;li&gt;element 1c&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;element 3&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre>"},{"location":"htmltags.html#opgaver_2","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Lister\u00a0- Her kan du \u00f8ve dig lidt i lister</li> </ul>"},{"location":"htmltags.html#tabeller","title":"Tabeller","text":"<p>Table-opm\u00e6rkningen er fortsat brugt i HTML, men overvej at benytte CSS Grid eller lignende.</p> <ul> <li>table = tabel</li> <li>tr = r\u00e6kker</li> <li>th/td = overskriftscelle/celle</li> <li>medtag helst<ul> <li>thead = omkranser header</li> <li>tbody = omkranser body</li> </ul> </li> </ul> <p>Her er et simpel eksempel:</p> <pre><code>&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;td&gt;celle&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> <p>Og her en lidt mere kompleks tabel.</p> <pre><code>&lt;!-- Lidt mere komplet tabel --&gt;\n&lt;table&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;Ov 1&lt;/th&gt;\n&lt;th&gt;Ov 2&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;Celle 1&lt;/td&gt;\n&lt;td&gt;Celle 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Celle 1&lt;/td&gt;\n&lt;td&gt;Celle 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;tfoot&gt;\n&lt;tr&gt;\n&lt;td&gt;Foot 1&lt;/td&gt;\n&lt;td&gt;Foot 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tfoot&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"htmltags.html#opgaver_3","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Tabeller\u00a0- Her kan du \u00f8ve dig lidt i brugen af \u201ctable\u201d</li> </ul>"},{"location":"htmltags.html#billeder","title":"Billeder","text":"<p>Billeder er en af de f\u00e5 opm\u00e6rkninger som ikke har noget decideret indhold - referencen til billedet angives med en src-attribut. Yderligere er alt-attributten (hvad skal der skrives hvis billedet ikke vises) kr\u00e6vet if\u00f8lge W3C.</p> <pre><code>&lt;!-- Eksternt billede --&gt;\n&lt;img src=\"https://picsum.photos/100\" alt=\"Billede\" /&gt;\n&lt;!-- internt billede --&gt;\n&lt;img src=\"/Billeder/lorem.png\" alt=\"Billede\" /&gt;\n&lt;!-- brug hellere css til styring af st\u00f8rrelse --&gt;\n&lt;img src=\"https://picsum.photos\" height=\"200\" alt=\"Billede\" /&gt;\n&lt;!-- Billede som et link --&gt;\n&lt;a href=\"side2.html\"&gt;\n&lt;img src=\"https://picsum.photos\" alt=\"Billede\" /&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"htmltags.html#opgaver_4","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Billeder og links\u00a0- Her kan du \u00f8ve dig lidt i billeder og links</li> </ul>"},{"location":"htmltags.html#media","title":"Media","text":"<p>Opm\u00e6rkningerne video og audio kan bruges til forskellige typer af medier, og erstattes fuldst\u00e6ndigt andre teknologier (Flash, JavaApplets med videre).</p>"},{"location":"htmltags.html#eksempler-pa-video","title":"Eksempler p\u00e5 video","text":"<pre><code>&lt;video\nsrc=\"http://media.w3.org/2010/05/bunny/movie.mp4\"\ncontrols\nautoplay\n&gt;&lt;/video&gt;\n&lt;video width=\"320\" height=\"240\" controls&gt;\n&lt;source src=\"http://media.w3.org/2010/05/bunny/movie.mp4\" type=\"video/mp4\" /&gt;\n&lt;source src=\"http://media.w3.org/2010/05/bunny/movie.ogg\" type=\"video/ogg\" /&gt;\n  Video spiller ikke lige i denne browser\n&lt;/video&gt;\n</code></pre>"},{"location":"htmltags.html#eksempler-pa-audio","title":"Eksempler p\u00e5 audio","text":"<pre><code>&lt;audio controls=\"\" preload=\"none\" controls&gt;\n&lt;source\nsrc=\"https://html5tutorial.info/media/vincent.mp3\"\ntype=\"audio/mpeg\"\n/&gt;\n&lt;source src=\"https://html5tutorial.info/media/vincent.ogg\" type=\"audio/ogg\" /&gt;\n  Ingen support for audio\n&lt;/audio&gt;\n</code></pre>"},{"location":"htmltags.html#formularer","title":"Formularer","text":"<p>I HTML kan formularer opbygges af</p> <ul> <li>tekstbokse</li> <li>lister</li> <li>knapper</li> <li>mv</li> </ul> <p>Kontrollerne kan eventuelt omkranses af en form-opm\u00e6rkning s\u00e5ledes, at browseren ved hvor data skal sendes hen:</p> <pre><code>&lt;form method=\"POST\" action=\"http://fdemo2.cronberg.dk/posttome.cshtml\"&gt;&lt;/form&gt;\n</code></pre> <p>Data kan dog ogs\u00e5 sendes til serveren ved brug af JavaScript.</p> <p>Her er et eksempel p\u00e5 en formular med et par tekstboksen, en checkbox, radioknapper samt en knap.</p> <pre><code>&lt;!-- kontroller er typisk placeret i en form med en submit knap --&gt;\n&lt;form method=\"POST\" action=\"http://fdemo2.cronberg.dk/posttome.cshtml\"&gt;\n  Navn &lt;input type=\"text\" name=\"navn\" /&gt; Alder\n  &lt;input type=\"text\" name=\"alder\" /&gt; Aktiv\n  &lt;input type=\"checkbox\" name=\"aktiv\" /&gt; Mand\n  &lt;input type=\"radio\" name=\"k\u00f8n\" value=\"mand\" /&gt; Kvinde\n  &lt;input type=\"radio\" name=\"k\u00f8n\" value=\"kvinde\" /&gt; Send\n  &lt;input type=\"submit\" value=\"Send data\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"htmltags.html#input-kontroller","title":"Input-kontroller","text":"<p>Der findes input-kontroller af forskellig art:</p> <pre><code>&lt;input type=\"text\" /&gt;\n&lt;input type=\"number\" /&gt;\n&lt;input type=\"color\" /&gt;\n&lt;input type=\"date\" /&gt;\n&lt;input type=\"datetime\" /&gt;\n&lt;input type=\"email\" /&gt;\n&lt;input type=\"month\" /&gt;\n&lt;input type=\"search\" /&gt;\n&lt;input type=\"tel\" /&gt;\n&lt;input type=\"time\" /&gt;\n&lt;input type=\"url\" /&gt;\n&lt;input type=\"week\" /&gt;\n&lt;input type=\"range\" /&gt;\n</code></pre> <p>Flere af disse har forskellig brugerflade og validering.</p>"},{"location":"htmltags.html#lister_1","title":"Lister","text":"<p>Lister kan skabes med select- og option-opm\u00e6rkninger:</p> <pre><code>&lt;select&gt;\n&lt;option&gt;Element 1&lt;/option&gt;\n&lt;option&gt;Element 2&lt;/option&gt;\n&lt;option&gt;Element 3&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>"},{"location":"htmltags.html#opgaver_5","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Formularer\u00a0- I denne opgave skal du skabe en HTML side hvor brugerne kan indtaste data i en formular</li> </ul>"},{"location":"htmltags.html#inkludering-af-css-og-script","title":"Inkludering af CSS og script","text":"<p>Der er en best-pratice for hvordan css og script tilknyttes en html-side.</p>"},{"location":"htmltags.html#css","title":"css","text":"<p>Tilknytning af css sker typisk altid i header</p> <pre><code>&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;min side&lt;/title&gt;\n&lt;link\nrel=\"stylesheet\"\nhref=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.css\"\n/&gt;\n&lt;link rel=\"stylesheet\" href=\"style.css\" /&gt;\n&lt;/head&gt;\n</code></pre>"},{"location":"htmltags.html#script","title":"script","text":"<p>Tilknytning af script sker typisk altid i bunden (over /body)</p> <pre><code>    &lt;! -- ... --&gt;\n&lt;script src=\"/script/app/app.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://code.jquery.com/jquery-3.3.1.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"intro.html","title":"Indledning","text":"<p>Denne mappe indeholder dokumenter som blot har til form\u00e5l at introducere forskellige emner.</p>"},{"location":"introcss.html","title":"Introduktion til CSS","text":""},{"location":"introcss.html#hvad-er-css","title":"Hvad er CSS","text":"<p>CSS (Cascading Style Sheets) er et opm\u00e6rkningssprog som fort\u00e6ller hvordan browseren skal vise html/xml. Hvor indhold er defineret i HTML er design alts\u00e5 defineret i CSS.</p>"},{"location":"introcss.html#user-agent-stylesheet","title":"User Agent Stylesheet","text":"<p>N\u00e5r du skriver HTML og viser det \u201cr\u00e5t\u201d i en browser er der allerede design (overskrift, fonte, margin mv), men det er fordi browseren har et standardiseret og predefineret udgangspunkt kaldet user agent stylesheet. N\u00e5r du selv skrive CSS s\u00e5 overskriver eller tilf\u00f8jer til dette styelsheet.</p>"},{"location":"introcss.html#elementer-i-css","title":"Elementer i CSS","text":"<p>Helt grundl\u00e6ggende best\u00e5r CSS af en samling elementer som er opdelt i to ting</p> <ul> <li>en s\u00f8gedefinition (selector) som fort\u00e6ller browseren hvilke DOM elementer som skal p\u00e5virkes</li> <li>egenskaber (properties) som fort\u00e6ller browseren hvordan de skal p\u00e5virkes</li> </ul> <p></p>"},{"location":"introcss.html#syntaks","title":"Syntaks","text":"<p>En selector skal efterf\u00f8lges af tuborgklammer, og de enkelte egenskaber skal afsluttes med semikolon.</p> <p>Overordnet er browseren ligeglad med tabulering, mellemrum og linjeskift - det skal kun v\u00e6re for udviklernes skyld. Store CSS filer kan man derfor v\u00e6lge at minificere for at g\u00f8re dem s\u00e5 sm\u00e5 som muligt.</p>"},{"location":"introcss.html#knyttes-til-html","title":"Knyttes til HTML","text":"<p>CSS skal loades af browseren og defineret i den HTML det skal p\u00e5virke. Dette kan blandt andet ske</p> <ul> <li>ekstern</li> <li>i head</li> <li>inline</li> </ul> <p></p>"},{"location":"introcss.html#w3c","title":"W3C","text":"<p>CSS som oprindeligt er skabt af blandt andet\u00a0H\u00e5kon Vium Lie\u00a0og\u00a0Tim Bernes-Lee, blev i 1994 (28 \u00e5r siden) standardiseret hos\u00a0W3C.</p> <p>Fra version 3 er CSS splittet og frigivet i moduler - se\u00a0https://www.w3.org/Style/CSS/current-work. Her skal man is\u00e6r l\u00e6gge m\u00e6rke til de forskellige niveauer hos W3C:</p> Niveau Beskrivelse WD Working draft CR Candidate recommendation PR proposed recommendation REC Recommendation <p>Mange af de n\u00e6vnte moduler er ikke REC hvilket betyder, at de ikke n\u00f8dvendigvis virker i alle browsere. En god side til at v\u00e6re sikker er\u00a0https://caniuse.com, men det bedste er naturligvis test - evt. gennem\u00a0https://www.browserstack.com/.</p> <p>W3C varetager ligeledes standardisering for\u00a0mange andre web\u00a0relaterede teknologier. Herudover stiller W3C forskellige v\u00e6rkt\u00f8jer til r\u00e5dighed - herunder is\u00e6r validering af\u00a0HTML\u00a0og\u00a0CSS.</p>"},{"location":"introcss.html#css-selectors","title":"CSS Selectors","text":"<p>En CSS selector er en s\u00f8ge streng som browseren benytter til at finde de elementer der skal p\u00e5virkes af CSS.</p> <p>Det kunne eksempelvis v\u00e6re alle p-opm\u00e6rkninger:</p> <pre><code>p {\n}\n</code></pre> <p>Alle h1\u2019ere under en section:</p> <pre><code>section h1 {\n}\n</code></pre> <p>Alle elementer med klassen r\u00f8d:</p> <pre><code>.r\u00f8d {\n}\n</code></pre> <p>Elementet med \u2018knap1\u2019 som id:</p> <pre><code>#knap1 {\n}\n</code></pre> <p>Der findes et hav af andre selectors og nogle kan v\u00e6re meget avancerede.</p>"},{"location":"introcss.html#css-properties","title":"CSS properties","text":"<p>N\u00e5r f\u00f8rst elementer er fundet med en CSS selector kan de p\u00e5virkes med en masse forskellige egenskaber relateret til eksempelvis</p> <ul> <li>Farver</li> <li>M\u00f8nstre</li> <li>Fonte</li> <li>St\u00f8rrelser</li> <li>Placeringer</li> <li>Rammer</li> <li>Animationer</li> <li>Dynamiske egenskaber relateret til klient/st\u00f8rrelse</li> <li>Meget mere</li> </ul>"},{"location":"introcss.html#eksempler-pa-css","title":"Eksempler p\u00e5 CSS","text":"<p>Her er et par sm\u00e5 eksempler - men der er rigtig mange egenskaber.</p>"},{"location":"introcss.html#tekster","title":"Tekster","text":"<pre><code>p {\nfont-size: 2em;\ncolor: red;\nbackground-color: white;\nfont-style: italic;\nwidth: 200px;\n}\n</code></pre>"},{"location":"introcss.html#css-frameworks","title":"CSS Frameworks","text":"<p>I moderne websites v\u00e6lger mange at udnytte open source baserede CSS framework for p\u00e5 den m\u00e5de at f\u00e5 et nemt og effektiv udgangspunkt til design af knapper, lister, grids, sektioner og meget mere.</p> <p>De meste popul\u00e6re frameworks er</p> <ul> <li>Bootstrap</li> <li>Semantic UI\u00a0/\u00a0Fomantic UI</li> <li>Materialize</li> <li>Bulma</li> <li>UiKit</li> </ul> <p>men der er mange flere og det er lidt en religion.</p> <p>Pr\u00f8v eventuelt at lege med Semantic med udgangspunkt i f\u00f8lgende HTML/CSS og deres dokumentation til\u00a0knapper\u00a0og\u00a0Rating-modulet:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;link\nrel=\"stylesheet\"\nhref=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\"\n/&gt;\n&lt;style&gt;\nbody {\nmargin: 20px;\n}\n&lt;/style&gt;\n&lt;title&gt;Min demo&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"ui container\"&gt;\n&lt;h1 class=\"ui header\"&gt;Min demo&lt;/h1&gt;\n&lt;div class=\"ui animated fade huge green button\" tabindex=\"0\"&gt;\n&lt;div class=\"visible content\"&gt;Se min&lt;/div&gt;\n&lt;div class=\"hidden content\"&gt;knap&lt;/div&gt;\n&lt;/div&gt;\n&lt;div style=\"margin-top: 20px\"&gt;\n&lt;div class=\"ui star rating\" data-rating=\"3\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(\".rating\").rating(\"enable\");\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introcss.html#utility-first-css-framework","title":"Utility-first CSS framework","text":"<p>Det er de sidste par \u00e5r blevet popul\u00e6rt at benytte utility-first CSS framework som eksempelvis\u00a0TailWind. Det er mere r\u00e5 frameworks som kr\u00e6ver lidt mere viden, men til geng\u00e6ld er man ikke h\u00e5rdt bundet til et givet design. I TailWind eksmepelvis arbejder med med predefinerede klasser som direkte matcher CSS-egenskaber.</p> <p>Her er et kort eksempel:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Document&lt;/title&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.0.2/tailwind.min.css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n&lt;h1 class=\"p-5 text-5xl text-red-700 animate-pulse\"&gt;Min side&lt;/h1&gt;\n&lt;p class=\"m-5 p-5 rounded border shadow-xl border-black bg-gray-200\"&gt;Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ea, error nesciunt deserunt consequuntur, nisi, unde blanditiis aut amet deleniti odio vero dicta corrupti! Nihil minus porro inventore magnam sunt temporibus.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Typisk vil man ikke benytte TailWind fra en CDN men gennem en Node-udviklingsproces. Se evt\u00a0denne gode serie\u00a0om TailWind.</p>"},{"location":"introcss.html#prv-det-selv","title":"Pr\u00f8v det selv","text":"<p>Hvis du gerne vil lege lidt med CSS kan du enten bruge nogle af de mange online \u201clegepladser\u201d som eksempelvis</p> <ul> <li>Codepen</li> <li>Code Sandbox</li> <li>Playcode</li> </ul> <p>Hvis du vil udvikle lokalt skal du bruge en teksteditor. De fleste udviklere bruger\u00a0Visual Studio Code\u00a0som er gratis og som virker p\u00e5 alle platforme. Se separat modul om Visual Studio Code og de tilh\u00f8rende extensions.</p>"},{"location":"introcss.html#video-eksempel-pa-udvikling-af-en-meget-simpel-html-side-med-css","title":"Video: Eksempel p\u00e5 udvikling af en meget simpel HTML side med CSS","text":"<p>Her er en video\u00a0som video udvikling af en simpel HTML side og tilh\u00f8rende CSS</p>"},{"location":"introcss.html#opgaver","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Start p\u00e5 CSS\u00a0- Simpel CSS opgave</li> <li>CSS Framework\u00a0- Leg med Semantic UI</li> </ul>"},{"location":"introcss.html#css-pre-og-postprocessor","title":"CSS pre- og postprocessor","text":""},{"location":"introcss.html#preprocessorer","title":"Preprocessorer","text":"<p>CSS er som udgangspunkt ikke et programmeringssprog og i store CSS frameworks kan det v\u00e6re en fordel at kunne skrive CSS p\u00e5 en mere \u201cprogrammeringsm\u00e6ssig m\u00e5de\u201d. Derfor findes der flere CSS preprocessorer som i virkeligheden skal ses som en transpiler der overs\u00e6tter en syntaks til CSS. Der er is\u00e6r to meget benyttede kaldet\u00a0SASS\u00a0og\u00a0LESS.</p> <p>Eksempelvis er dette LESS kode:</p> <pre><code>@width: 10px;\n@height: @width + 10px;\n#header {\nwidth: @width;\nheight: @height;\n}\n</code></pre> <p>og det minder syntaktm\u00e6ssigt meget om CSS. Men der er tilf\u00f8jet variabler (@) og beregninger (+) s\u00e5 en transpilering vil skabe f\u00f8lgende CSS:</p> <pre><code> #header {\n  width: 10px;\n  height: 20px;\n}\n</code></pre> <p>B\u00e5de LESS og SASS tilf\u00f8jer en masse funktionalitet men efterh\u00e5nden som CSS i W3C\u2019s standard bliver mere og mere moden, vil behovet for preprocessorer bliver mindre og mindre.</p>"},{"location":"introcss.html#postprocessorer","title":"Postprocessorer","text":"<p>Hvor LESS og SASS er en del af selve udviklingsprocessen, og hj\u00e6lper med at skabe CSS under udvikling, findes der ogs\u00e5 postprocessorer som afvikles i forbindelse med distribution. Det kunne eksempelvis v\u00e6re</p> <ul> <li>Kontrol af CSS mod W3C</li> <li>Minificering (fjerner mellemrum og linjeskift)</li> <li>Transpilering af helt ny CSS tilbage til \u00e6ldre CSS for support</li> </ul> <p>Se eksempelvis\u00a0PostCSS\u00a0eller\u00a0CSSNext.</p>"},{"location":"introdom.html","title":"Introduktion til DOM","text":"<p>Samtlige browsere indeholder et API til manipulering af DOM (Document Object Model) s\u00e5ledes at HTML elementer kan tilrettes, fjernes og tilf\u00f8jes. DOM er standadiseret af W3C.</p> <p> </p> <p>Billede fra W3Schools</p> <p>Du kan v\u00e6lge at arbejde direkte med DOM gennem r\u00e5 JavaScript eller benytte biblioteker (eksempelvis jQuery) eller frameworks (eksempelvis Vue, Angular eller React).</p> <p>I den r\u00e5 form stiller browseren forskellige objekter til r\u00e5dighed</p> <ul> <li>window</li> <li>navigator</li> <li>history</li> <li>screen</li> <li>location</li> <li>document</li> <li>statiske metoder<ul> <li>alert, setInterval mv</li> </ul> </li> </ul> <p>og samtlige HTML elementer er mappet til en konkret type (HTMLButtonElement, HTMLInputElement, HTMLSpanElement, HTMLParagrahElement mv).</p>"},{"location":"introdom.html#dom-manipulation","title":"DOM manipulation","text":"<p>Der findes en masse ressourcer p\u00e5 nettet relateret til DOM men f\u00f8lgende kan fungere som en introduktion.</p>"},{"location":"introdom.html#eksempel","title":"Eksempel","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 id=\"ov\"&gt;Test&lt;/h1&gt;\n&lt;button id=\"knap\"&gt;Klik p\u00e5 mig&lt;/button&gt;\n&lt;script&gt;\n// Find knap (knap) og n\u00e5r der klikkes p\u00e5 den\n// find element (ov) og g\u00f8r det r\u00f8dt\nlet knap = document.getElementById(\"knap\");\nknap.onclick = function () {\n// Find og s\u00e6t farve\nlet a = document.getElementById(\"ov\");\na.style.color = \"red\";\n};\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introhtml.html","title":"Introduktion til HTML","text":""},{"location":"introhtml.html#hvad-er-html","title":"Hvad er HTML","text":"<p>HTML (HyperText Markup Language) er et relativt simpelt opm\u00e6rkningssprog, som har til form\u00e5l at beskrive data/indhold i en webapplikation.</p> <p>Ved hj\u00e6lp af opm\u00e6rkninger som eksempelvis</p> <pre><code>&lt;!-- paragraf --&gt;\n&lt;p&gt;test&lt;/p&gt;\n&lt;!-- link --&gt;\n&lt;p&gt;Tekst med &lt;a href=\"...\"&gt;link&lt;/a&gt;&lt;/p&gt;\n&lt;!-- billede --&gt;\n&lt;img src=\"...\" /&gt;\n</code></pre> <p>kan der blandt andet beskrives</p> <ul> <li>tekst</li> <li>links</li> <li>billeder</li> <li>formularer</li> </ul> <p>HTML beskriver ikke p\u00e5 nogen m\u00e5de design, som varetages af CSS (Cascading Style Sheets), eller dynamik, som varetages af ES (JavaScript) samt WASM (WebAssembly).</p>"},{"location":"introhtml.html#opmrkninger","title":"Opm\u00e6rkninger","text":"<p>Opm\u00e6rkninger kan enten best\u00e5 af data som eksempelvis</p> <pre><code>&lt;h1&gt;Overskrift&lt;/h1&gt;\n&lt;p&gt;tekst&lt;/p&gt;\n</code></pre> <p>eller uden data</p> <pre><code>&lt;hr /&gt;\n</code></pre> <p>og opm\u00e6rkningerne placeres i et tr\u00e6 (opm\u00e6rkninger i opm\u00e6rkning i opm\u00e6rkninger i \u2026)</p> <pre><code>&lt;section&gt;\n&lt;div&gt;\n&lt;p&gt;tekst&lt;/p&gt;\n&lt;div&gt;\n&lt;p&gt;\n                tekst\n                &lt;span&gt;tekst&lt;/span&gt;\n&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n</code></pre> <p>Alle opm\u00e6rkninger kan have attributter best\u00e5ende af en n\u00f8gle og en v\u00e6rdi</p> <pre><code>&lt;div id=\"minDiv\"&gt;tekst&lt;/div&gt;\n&lt;p id=\"id1\" class=\"class1 class2\" style=\"color: red\"&gt;tekst&lt;/p&gt;\n&lt;img src=\"billeder/billede1.png\" alt=\"Mit billede\" /&gt;\n</code></pre>"},{"location":"introhtml.html#mellemrum-har-ingen-betydning","title":"Mellemrum har ingen betydning","text":"<p>Hverken mellemrum eller tabuleringer har nogen betydning i HTML - de g\u00f8r det blot nemmere at l\u00e6se for \u201cos\u201d.</p> <p>S\u00e5ledes tolkes f\u00f8lgende</p> <pre><code>&lt;p&gt;Tekst Tekst&lt;/p&gt;\n&lt;div&gt;\n&lt;p&gt;Ny tekst&lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <p>som</p> <pre><code>&lt;p&gt;Tekst Tekst&lt;/p&gt;\n&lt;div&gt;&lt;p&gt;Ny tekst&lt;/p&gt;&lt;/div&gt;\n</code></pre> <p>af browseren. Det er udelukkende et enkelt mellemrum i tekster som har betydning.</p>"},{"location":"introhtml.html#w3c","title":"W3C","text":"<p>HTML (HyperText Markup Language), som oprindeligt er skabt af blandt andet\u00a0Tim Bernes-Lee\u00a0insireret af \u00e6ldre teknologier som HyperText (Ted Nelson), blev i 1994 (28 \u00e5r siden) standardiseret hos\u00a0W3C. Herfra er der efterf\u00f8lgende frigivet mange versioner, og i skrivende stund (2020) er den seneste\u00a0version 5.2.</p> <p>W3C varetager ligeledes standardisering for\u00a0mange andre web\u00a0relaterede teknologier. Herudover stiller W3C forskellige v\u00e6rkt\u00f8jer til r\u00e5dighed - herunder is\u00e6r validering af\u00a0HTML\u00a0og\u00a0CSS.</p>"},{"location":"introhtml.html#semantik","title":"Semantik","text":"<p>Du skal se opm\u00e6rkninger som m\u00e5den at beskrive/definere data (tekst, afsnit, billeder, links mv). Nogle udviklere/designere v\u00e6lger at v\u00e6re meget explicit i brugen af opm\u00e6rkninger og benytter hele paletten af HTML. De er meget semanantiske i deres tilgang til opm\u00e6rkningerne. Andre er mere orienteret mod CSS (styling) og g\u00e5r ikke s\u00e5 meget op i de opm\u00e6rkningerne som ikke har konkret funktionalitet i browsere (som links og billeder elsempelvis).</p> <p>Eksempelvis kan en overskrift (h1), tekst (p) og en tabel (table, tr, td) skrives meget semantisk (HTML \u201cmindset\u201d):</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;section&gt;\n&lt;h1&gt;Overskrift&lt;/h1&gt;\n&lt;p&gt;Paragraf med tekst&lt;/p&gt;\n&lt;table width=\"50%\"&gt;\n&lt;tr&gt;\n&lt;td&gt;R\u00e6kke 1 Kolonne 1&lt;/td&gt;\n&lt;td&gt;R\u00e6kke 1 Kolonne 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;R\u00e6kke 2 Kolonne 1&lt;/td&gt;\n&lt;td&gt;R\u00e6kke 2 Kolonne 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/section&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Browseren vil benytte det indbyggede stylesheet (definering af stil) kaldet \u201cuser agent stylesheet\u201d til at vise opm\u00e6rkningerne.</p> <p>Men samme side kan ogs\u00e5 skrives med et CSS \u201cmindset\u201d:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Test&lt;/title&gt;\n&lt;link\nrel=\"stylesheet\"\nhref=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\"\n/&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div&gt;\n&lt;div class=\"ui header\"&gt;Overskrift&lt;/div&gt;\n&lt;div class=\"ui segment basic\"&gt;Paragraf med tekst&lt;/div&gt;\n&lt;div class=\"ui grid\" style=\"width: 50%\"&gt;\n&lt;div class=\"ui row\"&gt;\n&lt;div class=\"ui eight wide column\"&gt;R\u00e6kke 1 Kolonne 1&lt;/div&gt;\n&lt;div class=\"ui eight wide column\"&gt;R\u00e6kke 1 Kolonne 2&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"ui row\"&gt;\n&lt;div class=\"ui eight wide column\"&gt;R\u00e6kke 2 Kolonne 1&lt;/div&gt;\n&lt;div class=\"ui eight wide column\"&gt;R\u00e6kke 2 Kolonne 2&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Her benyttes et CSS framework kaldet\u00a0SemanticUI, som har defineret de forskellige klasse navne, men det kan v\u00e6re hvad som helst.</p> <p>Der er som udgangspunkt ingen forskel for browseren p\u00e5 brugen af semantiske opm\u00e6rkninger som h1 og p tilgang i forhold til brugen af div - det er op til udvikleren. Tit er de to ogs\u00e5 kombineret - eksempelvis</p> <pre><code>&lt;h1 class=\"ui header\"&gt;Overskrift&lt;/h1&gt;\n</code></pre> <p>Her er h1 benyttet sammen med css klasser og kunne liges\u00e5 godt v\u00e6re skrevet som</p> <pre><code>&lt;div class=\"ui header\"&gt;Overskrift&lt;/div&gt;\n</code></pre> <p>eller</p> <pre><code>&lt;p class=\"ui header\"&gt;Overskrift&lt;/p&gt;\n</code></pre> <p>De fleste v\u00e6lger at kombinere de gamle Tim Berners-Lee opm\u00e6rkninger med css klasser - alts\u00e5</p> <pre><code>&lt;h1 class=\"ui header\"&gt;Overskrift&lt;/h1&gt;\n</code></pre> <p>men det har ingen praktisk betydning relateret til browseren.</p>"},{"location":"introhtml.html#skabelon","title":"Skabelon","text":"<p>En HTML side f\u00f8lger en grundl\u00e6ggende skabelon med en html opm\u00e6rkning samt en head og en body:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;!-- ... --&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- ... --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introhtml.html#doctype","title":"Doctype","text":"<p>Doctypen beskriver hvilken version af HTML browseren kan forvente.</p> <p>Tidligere var den meget specifik med henvisning til skemaer, men i dag er den mere generel.</p> <pre><code>&lt;!DOCTYPE html&gt;\n</code></pre> <p>Ovenn\u00e6vnte betyder blot, at siden er en HTML5+ side.</p>"},{"location":"introhtml.html#header","title":"Header","text":"<p>Beskriver type metadata</p> <ul> <li>meta</li> <li>css</li> <li>javascript</li> </ul> <pre><code>&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta name=\"description\" content=\"Min side der best\u00e5r af ....\" /&gt;\n&lt;meta name=\"keywords\" content=\"HTML, CSS, JavaScript\" /&gt;\n&lt;meta name=\"author\" content=\"Michell Cronberg\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Min side&lt;/title&gt;\n&lt;/head&gt;\n</code></pre> <p>Nogle meta data er SEO relateret (Search Engine Optimization) medens andre er relateret til browserens forst\u00e5else af siden.</p>"},{"location":"introhtml.html#body","title":"Body","text":"<p>Best\u00e5r af opm\u00e6rkningerne til siden som renderes af browseren.</p>"},{"location":"introhtml.html#grundlggende-eksempel-pa-en-skabelon","title":"Grundl\u00e6ggende eksempel p\u00e5 en skabelon","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"da\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Min side&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introhtml.html#online-skabeloner","title":"Online skabeloner","text":"<p>Der findes en del skabeloner online man kan kopiere fra - b\u00e5de i \u201cren\u201d form som\u00a0HTML5 Boilerplate\u00a0eller med css som\u00a0HTML5Up\u00a0eller\u00a0ThemeForest.</p>"},{"location":"introhtml.html#grundlggende-opmrkninger","title":"Grundl\u00e6ggende opm\u00e6rkninger","text":"<p>Der findes en del opm\u00e6rkninger i HTML jf.\u00a0standard.</p>"},{"location":"introhtml.html#block-og-inline","title":"Block og Inline","text":"<p>Helt grundl\u00e6ggende kan opm\u00e6rkninger v\u00e6re enten block elementer som af browseren placeres under hinanden, og inline elementer som af browseren placeres ved siden af hinanden. Eksempelvis er p-opm\u00e6rkningen et block element</p> <pre><code>&lt;p&gt;tekst&lt;/p&gt;\n&lt;p&gt;tekst&lt;/p&gt;\n&lt;p&gt;tekst&lt;/p&gt;\n</code></pre> <p>Ovenn\u00e6vnte vil renderer tre afsnit under hinanden.</p> <p>F\u00f8lgende er eksempler p\u00e5 inline elementer</p> <pre><code>&lt;img src=\"https://cdn.cronberg.dk/kurser/div/csbog.jpg\" width=\"200\" alt=\"bog\" /&gt;\n&lt;img src=\"https://cdn.cronberg.dk/kurser/div/csbog.jpg\" width=\"200\" alt=\"bog\" /&gt;\n&lt;img src=\"https://cdn.cronberg.dk/kurser/div/csbog.jpg\" width=\"200\" alt=\"bog\" /&gt;\n</code></pre> <p>Det vil renderer tre billeder ved siden af hinanden.</p> <p>Men husk at det kan \u00e6ndres gennem css.</p>"},{"location":"introhtml.html#eksempler-pa-html","title":"Eksempler p\u00e5 HTML","text":"<p>Det ligger uden for dette modul at beskrive opm\u00e6rkningerne i detaljer, men her er et eksempel p\u00e5 en HTML-side med forskellige opm\u00e6rkninger:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Min side&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Overskrift&lt;/h1&gt;\n&lt;p&gt;Paragraf med tekst&lt;/p&gt;\n&lt;!-- Liste --&gt;\n&lt;ul&gt;\n&lt;li&gt;Element 1&lt;/li&gt;\n&lt;li&gt;Element 2&lt;/li&gt;\n&lt;li&gt;Element 3&lt;/li&gt;\n&lt;/ul&gt;\n&lt;!-- Tabel --&gt;\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;r\u00e6kke 1 kolonne 1&lt;/td&gt;\n&lt;td&gt;r\u00e6kke 1 kolonne 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;r\u00e6kke 2 kolonne 1&lt;/td&gt;\n&lt;td&gt;r\u00e6kke 2 kolonne 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;!-- Formular --&gt;\n&lt;form&gt;&lt;input type=\"text\" /&gt;&lt;button&gt;Klik p\u00e5 mig&lt;/button&gt;&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introhtml.html#prv-det-selv","title":"Pr\u00f8v det selv","text":"<p>Hvis du gerne vil lege lidt med HTML kan du enten bruge nogle af de mange online \u201clegepladser\u201d som eksempelvis</p> <ul> <li>Codepen</li> <li>Code Sandbox</li> <li>Playcode</li> </ul> <p>Hvis du vil udvikle lokalt skal du bruge en teksteditor. De fleste udviklere bruger\u00a0Visual Studio Code\u00a0som er gratis og som virker p\u00e5 alle platforme. Se separat modul om Visual Studio Code og de tilh\u00f8rende extensions.</p>"},{"location":"introhtml.html#eksempel-pa-udvikling-af-en-meget-simpel-html-side","title":"Eksempel p\u00e5 udvikling af en meget simpel HTML side","text":"<p>Her er en kort video\u00a0som viser udvikling af en meget simpel HTML side med Visual Studio Code.</p>"},{"location":"introhtml.html#diverse-vrktjer-og-ressourcer","title":"Diverse v\u00e6rkt\u00f8jer og ressourcer","text":"<p>Her er links til diverse v\u00e6rkt\u00f8jer og andre ressourcer relateret til HTML</p> <p>Tekster</p> <ul> <li>Lorem Ipsum - tekst</li> </ul> <p>Billeder</p> <ul> <li>Flickr</li> <li>Pixabay - gratis billeder</li> <li>Pexels - gratis billeder og video</li> <li>Burst - gratis billeder</li> <li>Picsum - Temp. billeder</li> <li>Unsplash</li> </ul> <p>Lyde</p> <ul> <li>SoundBible - gratis lyde</li> </ul> <p>Favicon</p> <ul> <li>Favicon - favicon baseret p\u00e5 tekst</li> <li>Gauger - favicon baseret p\u00e5 Font Awesome</li> </ul>"},{"location":"introhtml.html#opgaver","title":"Opgaver","text":"<p>F\u00f8lgende opgaver er tilg\u00e6ngelige:</p> <ul> <li>Start p\u00e5 HTML\u00a0- Dette er en meget simpel opgave der kan hj\u00e6lpe med at komme igang med HTML.</li> </ul>"},{"location":"introhtml.html#web-komponenter","title":"Web komponenter","text":"<p>Du vil muligvis falde over opm\u00e6rkninger som ikke ligner noget der kommer fra W3C - eksempelvis</p> <pre><code>&lt;p&gt;Demo af terning&lt;/p&gt;\n&lt;cronberg-dice&gt;&lt;/cronberg-dice&gt;\n</code></pre> <p>hvor \u201ccronberg-dice\u201d tydeligvis ikke er en W3C standard. Det kaldes en web komponent (Web Component) og giver mulighed for at skabe egne komponenter med indkapslet logik og design som dermed er nemme at genbruge.</p> <p>Du kan se et eksempel p\u00e5 en web komponent p\u00e5\u00a0devcronberg/WebComponentDemo\u00a0hvor ovenn\u00e6vnte terning er brugt, eller hente js-filen direkte som</p> <pre><code>&lt;script src=\"https://devcronberg.github.io/WebComponentDemo/dice.js\"&gt;&lt;/script&gt;\n</code></pre> <p>og pr\u00f8ve terningen som</p> <pre><code>&lt;cronberg-dice cheat=\"false\" debug=\"false\" value=\"1\"&gt;&lt;/cronberg-dice&gt;\n</code></pre>"},{"location":"introhtml.html#biblioteker","title":"Biblioteker","text":"<p>Der findes masser af biblioteker med web components p\u00e5 nettet - eksempelvis\u00a0webcomponents.org\u00a0eller Googles\u00a0Polymer Project</p>"},{"location":"introhtml.html#html-pre-og-postprocessor","title":"HTML pre- og postprocessor","text":""},{"location":"introhtml.html#preprocessorer","title":"Preprocessorer","text":"<p>Du vil muligvis falde over begreber som</p> <ul> <li>markdown</li> <li>pug</li> <li>haml</li> <li>slim</li> </ul> <p>Det er s\u00e5kaldte HTML preprocessorer som typisk er en definitation af en mere simpel syntaks end ren html. Til geng\u00e6ld kr\u00e6ver det en konvertering (transpilering) af den simple syntaks til html inden det kan bruges - for html er det eneste browseren forst\u00e5r.</p> <p>Eksempelvis kan f\u00f8lgende markdown</p> <pre><code># Overskrift Dette er et afsnit - v\u00e6rdi 1 - v\u00e6rdi 2 - v\u00e6rdi 3\n</code></pre> <p>konverteres til f\u00f8lgende html</p> <pre><code>&lt;h1&gt;Overskrift&lt;/h1&gt;\n&lt;p&gt;Dette er et afsnit&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;v\u00e6rdi 1&lt;/li&gt;\n&lt;li&gt;v\u00e6rdi 2&lt;/li&gt;\n&lt;li&gt;v\u00e6rdi 3&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>S\u00e5 det er nemmere at skrive markdown (md) end HTML- men kr\u00e6ver alts\u00e5 et ekstra step for at generere HTML.</p>"},{"location":"introhtml.html#postprocessorer","title":"Postprocessorer","text":"<p>N\u00e5r f\u00f8rst du har skrevet din HTML findes der scripts/moduler/applikationer - s\u00e5kaldte postprocessorer - som kan g\u00f8re HTML klar til drift. Det kunne eksempelvis v\u00e6re</p> <ul> <li>kontrol af HTML mod W3C (linter)</li> <li>kontrol af links og billeder</li> <li>minificering af HTML (fjerner mellemrum og linjeskift mv)</li> </ul> <p>Disse scripts er typisk en del af udviklingsprocessen i en eller anden form - m\u00e5ske afviklet i forbindelse med build.</p>"},{"location":"introhtml.html#vrktj-til-html-udvikling","title":"V\u00e6rkt\u00f8j til HTML udvikling","text":"<p>Der findes en del forskellige plugins til Chrome som kan v\u00e6re brugbare:</p> <ul> <li>Validity plugin:\u00a0https://chrome.google.com/webstore/detail/validity/bbicmjjbohdfglopkidebfccilipgeif?hl=en-GB</li> <li>HTML Tree plugin:\u00a0https://chrome.google.com/webstore/detail/html-tree-generator/dlbbmhhaadfnbbdnjalilhdakfmiffeg</li> <li>HeadingsMap plugin:\u00a0https://chrome.google.com/webstore/detail/headingsmap/flbjommegcjonpdmenkdiocclhjacmbi</li> </ul>"},{"location":"introhttp.html","title":"Introduktion til HTTP","text":"<p>HTTP er en forkortelse for (Hypertext Transfer Protocol) og er en Request/Response kommunikationsprotokol skabt af Tim Berners-Lee - se eventuelt http://ithistorie.cronberg.dk.</p>"},{"location":"introhttp.html#klient-server","title":"Klient / Server","text":"<p>Den oprindelige HTTP 1/1.1 er en relativ simpel tekstbaseret protokol hvor klienten foretage et request til serveren og server behandler det og returnerer et *response. Det kaldes ogs\u00e5 for en HTTP transaktion. Typisk sker kommunikation over port 80 ovenp\u00e5 TCP/IP.</p>"},{"location":"introhttp.html#stuktur","title":"Stuktur","text":"<p>Grundl\u00e6ggende best\u00e5r en request/response af</p> <ul> <li>Header</li> <li>Data</li> <li>Body</li> <li>FormData, HTML, CSS, JavaScript, JSON, XML</li> </ul>"},{"location":"introhttp.html#kommandoer","title":"Kommandoer","text":"<p>Der findes en del forskellige kommandoer men i standard webudvikling skal du kende til GET og POST. GET kommandoen bruges til at hente data fra serveren gennem en URL, og POST bruges til at sende data til serveren via en formular eller JavaScript.</p> <p>Her er et eksempel p\u00e5 en simpel HTTP 1.1 GET foresp\u00f8rgsel</p>"},{"location":"introhttp.html#request","title":"Request","text":"<pre><code>GET http://fdemo2.cronberg.dk/SimplePage HTTP/1.1\nHost: fdemo2.cronberg.dk\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nReferer: http://fdemo2.cronberg.dk/\nAccept-Encoding: gzip, deflate\nAccept-Language: en,da;q=0.9,en-US;q=0.8\n</code></pre>"},{"location":"introhttp.html#response","title":"Response","text":"<pre><code>HTTP/1.1 200 OK\nCache-Control: private\nContent-Length: 1498\nContent-Type: text/html; charset=utf-8\nServer: Microsoft-IIS/8.5\nX-AspNet-Version: 4.0.30319\nX-AspNetWebPages-Version: 3.0\nX-Powered-By: ASP.NET\nDate: Tue, 02 Oct 2018 22:09:33 GMT\n\n&lt;!DOCTYPE html&gt;\n...\n</code></pre> <p>Her er et eksempel p\u00e5 en simpel HTTP 1.1 POST foresp\u00f8rgsel</p>"},{"location":"introhttp.html#request_1","title":"Request","text":"<pre><code>POST http://fdemo2.cronberg.dk/SimplePost_submit.cshtml HTTP/1.1\nHost: fdemo2.cronberg.dk\nConnection: keep-alive\nContent-Length: 174\nCache-Control: max-age=0\nOrigin: http://fdemo2.cronberg.dk\nUpgrade-Insecure-Requests: 1\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nReferer: http://fdemo2.cronberg.dk/SimplePost\nAccept-Encoding: gzip, deflate\nAccept-Language: en,da;q=0.9,en-US;q=0.8\n\ntxtName_name=1234&amp;txtSecretName_name=5678&amp;lstCountry_name=DK&amp;lstSpeak_name=SE&amp;chkFeelYoung_name=on&amp;optSex_name=Male&amp;file1_name=&amp;txtNotes_name=test&amp;btnSubmit1_name=Submit+%231\n</code></pre>"},{"location":"introhttp.html#reponse","title":"Reponse","text":"<pre><code>HTTP/1.1 200 OK\nCache-Control: private\nContent-Length: 1684\nContent-Type: text/html; charset=utf-8\nServer: Microsoft-IIS/8.5\nX-AspNet-Version: 4.0.30319\nX-AspNetWebPages-Version: 3.0\nX-Powered-By: ASP.NET\nDate: Tue, 02 Oct 2018 22:11:34 GMT\n\n&lt;!DOCTYPE html&gt;\n...\n</code></pre>"},{"location":"introhttp.html#status-koder","title":"Status koder","text":"<p>Der findes en del status koder som du som udvikler kan bruge til at finde status p\u00e5 kommunikationen:</p> <ul> <li>Informational 1XX</li> <li>Successful 2XX</li> <li>200 OK</li> <li>Redirection 3XX</li> <li>301/302</li> <li>Client Error 4XX</li> <li>Server Error 5X</li> <li>500 Server error</li> </ul>"},{"location":"introhttp.html#cookie","title":"Cookie","text":"<p>En Cookie er i virkeligheden bare et lille stykke tekst som inkluderes i headeren. Afh\u00e6ngig af typen vil browseren opbevare teksten og medtage denne til serveren ved alle efterf\u00f8lgende kald indtil den udl\u00f8ber.</p> <p>Her er et eksempel p\u00e5 en server som sender en cookie:</p> <pre><code>HTTP/1.1 200 OK\nCache-Control: private\nContent-Length: 1765\nContent-Type: text/html; charset=utf-8\nServer: Microsoft-IIS/8.5\nX-AspNet-Version: 4.0.30319\nX-AspNetWebPages-Version: 3.0\nSet-Cookie: MySessionCookie=My value; path=/\nSet-Cookie: MyExpireCookie=My value; expires=Tue, 16-Oct-2018 22:13:16 GMT; path=/\nX-Powered-By: ASP.NET\nDate: Tue, 02 Oct 2018 22:13:16 GMT\n\n&lt;!DOCTYPE html&gt;\n...\n</code></pre>"},{"location":"introhttp.html#kryptering","title":"Kryptering","text":"<p>HTTP er den rene tekstbaserede protokol. De fleste websites benytter en SSL krytering ved hj\u00e6lp af et certifikat og komunikere over en anden port end port 80. I s\u00e5 fald kaldes protokollen HTTPS.</p>"},{"location":"introhttp.html#http2","title":"HTTP/2","text":"<p>For ikke s\u00e5 mange \u00e5r siden blev HTTP 1.1 opdateret til HTTP 2 og alle browsere og servere har i dag mulighed for at kommunikere over HTTP2 hvis det \u00f8nskes. HTTP2 er en kraftig opdatering af den gamle version med en masse ny features:</p> <ul> <li>Multiplexing (flere transaktioner i en)</li> <li>Server push</li> <li>Bin\u00e6r</li> <li>Prioritisering af afsendelse af ressourcer</li> <li>Hastighed</li> </ul> <p>Se eventuelt HTTP2 test</p>"},{"location":"introhttp.html#uriurl","title":"URI/URL","text":"<p>Al kommunikation sker ved hj\u00e6lp af en tekst som identificere en ressource p\u00e5 nettet. Oprindelig specificerede Tim Berners-Lee URI (Uniform Resource Identifier) men URL (Uniform Resource Locator) og URN (Uniform Resource Name) er de konkrete specifikationer benyttet i HTTP.</p> <p>En URI best\u00e5r af </p> <pre><code>Protokol://subdom\u00e6ne(r).dom\u00e6ne/resource?Querystring (opdelt i n\u00f8gle og v\u00e6rdier adskilt med &amp;)\n</code></pre> <p>Her er et par eksempler:</p> <pre><code>http://www.google.com\nhttps://kursusportal.cronberg.dk/forside\nhttps://kursusportal.cronberg.dk/modul/1\nhttps://kursusportal.cronberg.dk/s\u00f8g?q=web\nhttps://kursusportal.cronberg.dk/viskursus?id=1&amp;bruger=michell\n</code></pre>"},{"location":"introhttp.html#vrktj","title":"V\u00e6rkt\u00f8j","text":"<p>Der findes en del v\u00e6rkt\u00f8jer relateret til test og brug af HTTP.</p>"},{"location":"introhttp.html#f12","title":"F12","text":"<p>Som udvikler kan du typisk n\u00f8jes med at benytte netv\u00e6rksfanen i browseren F12 tool - den giver alle de oplysninger der \u00f8nskes.</p>"},{"location":"introhttp.html#fiddler","title":"Fiddler","text":"<p>Men hvis du gerne vil have en dybere forst\u00e5else for HTTP og samtidigt gerne vil kunne skabe scripts der tester HTTP kommunikation kan Fiddler anbefales.</p>"},{"location":"introhttp.html#curl","title":"Curl","text":"<p>Slutteligt findes Curl som er et meget benyttet kommandolinje v\u00e6rkt\u00f8j til alle former for HTTP kommunikation.</p>"},{"location":"introhttp.html#prv-det-selv","title":"Pr\u00f8v det selv","text":"<p>Jeg har et par sider liggende p\u00e5 </p> <p>http://webdemo.cronberg.dk/</p> <p>hvis du vil lege lidt med HTTP/1.1.</p>"},{"location":"introjquery.html","title":"Introduktion til jQuery","text":"<p>jQuery er et af de mest popul\u00e6re biblioteker - udviklet af John Resig i 2006. Det bruges prim\u00e6rt til DOM manipulation men har ogs\u00e5 simple Ajax metoder mv.</p> <p>Elementer kan findes ved hj\u00e6lp af CSS selector syntaks gennem funktionen</p> <ul> <li>$</li> <li>jQuery</li> </ul> <p>som returnerer et array af DOM elementer, som efterf\u00f8lgende kan p\u00e5virkes. Array kan eventuelt p\u00e5virkes af et hav af filtre (:contains, :hidden, :button, :focus og mange flere).</p>"},{"location":"introjquery.html#eksempel","title":"Eksempel","text":"<p>Det ligger uden for dette modul at beskrive jQuery i dybden men her er et eksempel:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 id=\"ov\"&gt;Test&lt;/h1&gt;\n&lt;button id=\"knap\"&gt;Klik p\u00e5 mig&lt;/button&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n// Find knap (knap) og n\u00e5r der klikkes p\u00e5 den\n// find element (ov) og g\u00f8r det r\u00f8dt\n$(\"#knap\").click(function () {\n$(\"#ov\").css(\"color\", \"red\");\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introjs.html","title":"Introduktion til JavaScript","text":"<p>JavaScript er det programmeringssprog der benyttes i alle moderne browsere, og er i dag den eneste mulighed for at skabe en dynamisk side. Der findes ogs\u00e5 WebAssembly (WASM) men det benyttes til at skabe komponenter som kan kaldes fra JavaScript.</p> <p>Sproget er det popul\u00e6re programmeringssprog (developer survey) fordi det er effektivt og \u201csimpelt\u201d. Samtidigt er det beh\u00e6ftet med forskellige fejl/uhensigtsm\u00e6ssigheder fra f\u00f8dsel - som dog er rettet i de senere versioner (s\u00e5 godt som det nu er muligt).</p> <p>Sproget benyttes i forskellige klienter og runtimes - mest kendt er NodeJS som benyttes Google\u2019s V8 motor til at kompilere og afvikle JavaScript p\u00e5 desktop/server.</p> <p>Oracle har varem\u00e6rket p\u00e5 JavaScript og er i princippet de eneste som m\u00e5 kalde sproget for JavaScript. Derfor findes der forskellige kreative navne p\u00e5 implementationer hos firmaer som blandt andet udvikler browsere - herunder</p> <ul> <li>Carakan (Opera)</li> <li>SpiderMonkey (Firefox)</li> <li>V8 (Google)</li> <li>JScript (Microsoft)</li> <li>og mange flere</li> </ul> <p>Sproget er skabt af Brendan Eich (Netscape) i 1995 inspireret af sprog</p> <ul> <li>C<ul> <li>syntaks</li> </ul> </li> <li>Scheme/Lisp<ul> <li>funktionsorienteret</li> </ul> </li> <li>Self/Smalltalk<ul> <li>objektorienteret</li> </ul> </li> </ul> <p>Sproget er typesvagt samt dynamisk og har features relateret til objektorienteret programmering (baseret p\u00e5 prototype) og funktionsorienteret programmering.</p>"},{"location":"introjs.html#ecma-script","title":"ECMA Script","text":"<p>Sproget er standardiseret af ECMA (tidligere European Computer Manufacturers Association - nu Ecma International) f\u00f8rste gang i 1997 (@cs DateTime.Now.Year - 1997 @ \u00e5r siden) - og kaldes derfor typisk ES (ECMAScript).</p> <p> </p> <p>Der er frigivet en del versioner gennem \u00e5rene:</p> <ul> <li>1997 ES v1</li> <li>1997 ES v2</li> <li>1999 ES v3</li> <li>2009 ES v5</li> <li>2015 ES v6</li> <li>2017 ES 2017</li> <li>2018 ES 2018</li> <li>2019 ES 2019</li> <li>2020 ES 2020</li> <li>2021 ES 2021</li> </ul> <p>De versioner man typisk h\u00f8rer mest om er ES3 (stor opdatering) og is\u00e6r ES6 (stor opdatering).</p> <p>Se evt ITHistorie</p>"},{"location":"introjs.html#platform","title":"Platform","text":"<p>Man kan v\u00e6lge at afvikle JavaScript filer direkte i browseren, men ved hj\u00e6lp af NodeJS kan JavaScript ogs\u00e5 benyttes p\u00e5 desktop eller server til blandt andet automatisering eller applikationsafvikling.</p>"},{"location":"introjs.html#introduktion-til-javascript_1","title":"Introduktion til JavaScript","text":"<p>Der er masser ressourcer p\u00e5 nettet relateret til programmering med JavaScript (ECMAScript), men her er et par ting som du b\u00f8r vide:</p> <ul> <li>Det kan (som det eneste scriptsprog) afvikles i alle browsere</li> <li>Det kan afvikles gennem Node.js</li> <li>Det har en C syntaks</li> <li>Det er typefrit</li> <li>Det er dynamisk</li> <li>Det er objektorienteret</li> </ul>"},{"location":"introjs.html#eksempler","title":"Eksempler","text":"<p>Her er et par korte eksempler med kommentarer:</p> <pre><code>// B\u00f8r altid v\u00e6re i toppen af scope i alt JavaScript\n\"use strict\";\n// Udskriv p\u00e5 consol (node eller browser)\nconsole.log(\"Test\");\n// erkl\u00e6ring og tildeling af variabler\nlet a = 1;\nlet b = \"Teknologisk\"; // eller 'Teknologisk'\n// beregninger\na++;\na = a + 10;\nconsole.log(\"a = \" + a);\n// betingelser\nif (a === 12) {\nconsole.log(\"a = 12\");\n}\nif (a === 12 &amp;&amp; b !== \"JS\") {\nconsole.log(\"a = 12 og b er forskellig fra 'JS'\");\n}\n// l\u00f8kke - t\u00e6ller 0 - 4\nfor (var i = 0; i &lt; 5; i++) {\nconsole.log(i);\n}\n// funktion\nfunction add(a, b) {\nreturn a + b;\n}\nlet resultat = add(10, 20);\nconsole.log(\"10 + 20 =\" + resultat);\n// Objekt\nlet c = {\nnavn: \"Mathias\",\nalder: 14,\n};\nconsole.log(c);\n// Klasse\nclass Person {\nconstructor(navn, alder) {\nthis.navn = navn;\nthis.alder = alder;\n}\nskriv() {\nconsole.log(`Jeg hedder ${this.navn} og er ${this.alder} gammel.`);\n}\n}\nlet p = new Person(\"Mikkel\", 17);\np.skriv();\n</code></pre>"},{"location":"introjs.html#prv-det-selv","title":"Pr\u00f8v det selv","text":"<ul> <li>Installer NodeJs i seneste version, og s\u00f8rg for at installationen tilf\u00f8je node.exe til Path-variablen.</li> <li>Installer Visual Studio Code samt extensions<ul> <li>Live Server</li> <li>Prettier</li> </ul> </li> <li>Opret en tom mappe og i en terminal naviger til mappen og skriv</li> </ul> <pre><code>npm init -f\n</code></pre> <ul> <li>Dette opretter en package.json</li> <li>Start VS code med</li> </ul> <pre><code>code .\n</code></pre> <ul> <li>Opret en tom js fil (app.js) og tilf\u00f8j lidt kode</li> </ul> <pre><code>console.log(\"Hello word\");\n</code></pre> <ul> <li>Tryk F5 i VSC og v\u00e6lg Node som afvikler</li> <li>Du kan ogs\u00e5 fra terminal skrive</li> </ul> <pre><code>node app.js\n</code></pre> <p>Her er en kort video som viser hvordan du kommer i gang med at afvikle JavaScript i browseren og via Node.</p> <p>Se evt. dette repo for forskellige eksempler.</p>"},{"location":"introjs.html#moduler","title":"Moduler","text":"<p>I det oprindelige ECMA Script kan man udelukkende indkapsle data og funktionalitet i funktioner, og det kan g\u00f8re en st\u00f8rre kodebase meget kompleks at udvikle. Derfor har man s\u00f8gt efter muligheder for at modulalisere ES, og flere m\u00f8nstre/formater/standarder er blevet skabt.</p> <ul> <li>Closure og funktioner i \u201cren\u201d ES</li> <li>CommonJS</li> <li>AMD (Asynchronous Module Definition)</li> <li>UMD (Universal Module Definition)</li> </ul> <p>De sidste tre kr\u00e6ver en transpiler som WebPack, Browserify eller Parcel for at virke i en browser, og Node har valgt at benytte CommonJS som standard.</p>"},{"location":"introjs.html#es6-moduler","title":"ES6 moduler","text":"<p>Inden for de sidste par \u00e5r er ES6 moduler blevet en mulighed i alle browsere og Node s\u00e5 det er sikkert den vej moduler i fremtiden vil blive udviklet.</p> <p>I ES6 er en .js fil et modul der som helt af sig selv er en container hvor alt er privat, og hvis man \u00f8nsker at andre skal have adgang til data og funktionalitet skal det eksporteres.</p>"},{"location":"introjs.html#ajax","title":"AJAX","text":"<p>AJAX er et akronym for Async JavaScript And XML og d\u00e6kker over muligheden for at benytte det i alle browsere indbyggede XML HTTP Request Object til HTTP kommunikation. Objektet er tilg\u00e6ngeligt direkte men de fleste benytter et bibliotek som jQuery (som har AJAX metoder) eller Axios.</p>"},{"location":"introjs.html#eksempel-med-axios","title":"Eksempel med Axios","text":"<p>Her er et eksempel med brug af Axios i en browser:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Kommuner&lt;/title&gt;\n&lt;h1&gt;Alle kommuner i Danmark&lt;/h1&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ul id=\"kommuner\"&gt;&lt;/ul&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nhentData();\nasync function hentData() {\nconst response = await axios.get(\n\"https://dawa.aws.dk/kommuner/\"\n);\nconst ol = document.getElementById(\"kommuner\");\nfor (var i = 0; i &lt; response.data.length; i++) {\nconst li = document.createElement(\"li\");\nli.innerHTML = response.data[i].navn;\nol.appendChild(li);\n}\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Bem\u00e6rk, at biblioteket hentes f\u00f8rst i jsdelivr (men det findes mange steder - eller kan hentes lokalt).</p> <p>Her er samme funktion afviklet via node, men det kr\u00e6ver at Axios er hentet med</p> <pre><code>npm i axios --save\n</code></pre> <p>Herefter kan f\u00f8lgende hente kommuner og udskrive p\u00e5 konsol:</p> <pre><code>const axios = require(\"axios\").default;\nhentData();\nasync function hentData() {\nconst response = await axios.get(\"https://dawa.aws.dk/kommuner/\");\nfor (var i = 0; i &lt; response.data.length; i++) {\nconsole.log(response.data[i].navn);\n}\n}\n</code></pre>"},{"location":"introjs.html#polyfill","title":"Polyfill","text":"<p>Man skal v\u00e6re lidt opm\u00e6rksom p\u00e5 hvilke version af EcmaScript man benytter fordi der vil opst\u00e5 fejl i \u00e6ldre browsere hvis den p\u00e5g\u00e6ldende version ikke underst\u00f8ttes. Se eksempelvis classList og String.ReplaceAll.</p> <p>Problemet kan l\u00f8ses med et polyfill som eksempelvis classList eller f\u00f8lgende kode til ReplaceAll:</p> <pre><code>if (!String.prototype.replaceAll) {\nString.prototype.replaceAll = function (str, newStr) {\n// If a regex pattern\nif (\nObject.prototype.toString.call(str).toLowerCase() ===\n\"[object regexp]\"\n) {\nreturn this.replace(str, newStr);\n}\n// If a string\nreturn this.replace(new RegExp(str, \"g\"), newStr);\n};\n}\n</code></pre> <p>Der findes en del biblioteker som kan hj\u00e6lpe - eksempelvis https://polyfill.io/v3/</p>"},{"location":"introjs.html#lintere","title":"Lintere","text":"<p>En af de st\u00f8rste udfordringer ved udvikling af JavaScript er at sproget er typefrit og dynamisk. Det kan give en masse mulighed i udvikling af logik, men det betyder ogs\u00e5 at udviklingsmilj\u00f8er har sv\u00e6rt ved at tilbyde hj\u00e6lp. Yderligere er der en masse \u201cbest practice\u201d i JavaScript som kan v\u00e6re sv\u00e6r at overholde - selv for erfarne udviklere.</p> <p>Derfor findes der flere produktioner - kaldet lintere - til JavaScript, som har til form\u00e5l at finde fejl og komme med advarsler ud fra et givet s\u00e6t af regler.</p>"},{"location":"introjs.html#eslint","title":"ESLint","text":"<p>En af de mere popul\u00e6re er ESLint som kan tilrettes p\u00e5 alle mulige m\u00e5der. Eksempelvis kan JavaScript kode som</p> <pre><code>let a = b;\n</code></pre> <p>v\u00e6re et problem fordi b ikke er erkl\u00e6ret inden brug, og a i \u00f8vrigt ikke er benyttet. Begge dele er vigtig information men ikke i sig selv en fejl i JavaScript.</p> <p>Derfor vil du til finde ESLint, JSLint eller andre lignende linter v\u00e6re en del af et JavaScript projekt.</p>"},{"location":"introjs.html#transpilere","title":"Transpilere","text":"<p>JavaScript kan v\u00e6re en udfordring grundet b\u00e5de designfejl, manglende typesikkerhed samt krav om kompatibilitet med \u00e6ldre versioner af runtime i browsere. Derfor har der v\u00e6ret tradition for, at kode blev skrevet i andre sprog (eksempelvis Java eller Python) og s\u00e5 transpileret til JavaScript.</p>"},{"location":"introjs.html#typescript-ts","title":"TypeScript (TS)","text":"<p>De senere \u00e5r er der dog dukket andre typer af transpilere op som man typisk ser i et st\u00f8rre JavaScript projekt. Microsofts TypeScript er en af de popul\u00e6re transpilere. Den tilf\u00f8jer b\u00e5de typer, nye features til sproget, retter gamle fejl og transpilere ny og moderne JavaScript til \u00e6ldre versioner.</p> <p>TypeScript er et supers\u00e6t af JavaScript forst\u00e5et s\u00e5ledes, at en JS fil helt automatisk er en TS fil men der kan tilf\u00f8jes features til TS som s\u00e5 transileres til JS.</p> <p>Eksempelvis er f\u00f8lgende kode TS og ikke JS:</p> <pre><code>function l\u00e6gSammen(a: number, b: number): number {\nreturn a + b;\n}\nlet a: number = l\u00e6gSammen(1, 1);\n</code></pre> <p>L\u00e6g m\u00e6rke til definitionen af typer som JS ikke forst\u00e5r, men som giver en masse fordele i forbindelse med udvikling af kode. TS koden bliver transpileret til JS som f\u00f8lger:</p> <pre><code>function l\u00e6gSammen(a, b) {\nreturn a + b;\n}\nlet a = l\u00e6gSammen(1, 1);\n</code></pre> <p>Nu er typedefinitionen v\u00e6k og koden kan forst\u00e5s af JS runtimes.</p> <p>Et andet eksempel er f\u00f8lgende:</p> <pre><code>namespace Cronberg {\nclass Person {}\nclass Elev extends Person {}\n}\n</code></pre> <p>hvilket er logisk objektorienteret kode, men hvis det skal virke i \u00e6ldre browsere som benytter ES5 blivr det transpileret til</p> <pre><code>var __extends =\n(this &amp;&amp; this.__extends) ||\n(function () {\nvar extendStatics = function (d, b) {\nextendStatics =\nObject.setPrototypeOf ||\n({ __proto__: [] } instanceof Array &amp;&amp;\nfunction (d, b) {\nd.__proto__ = b;\n}) ||\nfunction (d, b) {\nfor (var p in b)\nif (Object.prototype.hasOwnProperty.call(b, p))\nd[p] = b[p];\n};\nreturn extendStatics(d, b);\n};\nreturn function (d, b) {\nextendStatics(d, b);\nfunction __() {\nthis.constructor = d;\n}\nd.prototype =\nb === null\n? Object.create(b)\n: ((__.prototype = b.prototype), new __());\n};\n})();\nvar Cronberg;\n(function (Cronberg) {\nvar Person = /** @class */ (function () {\nfunction Person() {}\nreturn Person;\n})();\nvar Elev = /** @class */ (function (_super) {\n__extends(Elev, _super);\nfunction Elev() {\nreturn (_super !== null &amp;&amp; _super.apply(this, arguments)) || this;\n}\nreturn Elev;\n})(Person);\n})(Cronberg || (Cronberg = {}));\n</code></pre>"},{"location":"introjs.html#babel","title":"Babel","text":"<p>En anden popul\u00e6r transpiler er Babel som har lignende funktionalitet men som ikke er typest\u00e6rk men derimod st\u00e6rk i transpilering af helt nye features i JS til \u00e6ldre versioner.</p>"},{"location":"intronodejs.html","title":"Introduktion til NodeJS","text":"<p>JavaScript runtime bygget p\u00e5 Googles V8 motor, der giver mulighed for at afvikle JavaScript filer p\u00e5 b\u00e5de server og desktop - p\u00e5 de fleste platforme.</p> <p>NodeJS er skabt af Ryan Dahl i 2009. Se ithistorie.cronberg.dk for at f\u00e5 et overblik.</p> <p>Download Node fra https://nodejs.org/ til alle platforme.</p>"},{"location":"intronodejs.html#eventloop","title":"EventLoop","text":"<p>Node benytter et indbygget eventloop der asynkront kalder eksterne ressourcer (IO, DB, HTTP mv)</p> <p></p> <p>ref</p> <p>Node (og JS) er enkelttr\u00e5det men afvikler IO/HTTP mv asynkront ved at lade operativsystemet foretage kald.</p>"},{"location":"intronodejs.html#indbyggede-apier","title":"Indbyggede APIer","text":"<p>Node har et hav af indbyggede APier som giver mulighed for at benytte</p> <ul> <li>console</li> <li>kryptering</li> <li>http, dns, tcp mv</li> <li>moduler</li> <li>fil systemet</li> <li>operativsystemet</li> <li>streams</li> <li>timers</li> </ul> <p>og meget mere.</p>"},{"location":"intronodejs.html#brug-af-node","title":"Brug af node","text":"<p>Flere store virksomheder benytter node til at skabe serverside webapplikationer med voldsomt mange brugere</p> <ul> <li>Paypal</li> <li>Netflix</li> <li>Uber</li> <li>LinkedIn</li> <li>mv</li> </ul> <p>og mange benytter node scripts som en del af udviklingsprocessen til alle typer af applikationer</p> <ul> <li>kompilering/transpilering</li> <li>linting</li> <li>minificering</li> <li>tranformering af billeder</li> <li>kopi/backup</li> <li>deployment</li> <li>kryptering</li> <li>komprimering</li> <li>mv</li> </ul> <p>Argumenterne for at benytte Node er mange</p> <ul> <li>Javascript</li> <li>Hastighed</li> <li>Async / non blocking</li> <li>Mange muligheder for at skabe apps (serverside/clientside)</li> <li>NPM med et hav af pakker (+50.000)</li> <li>Meget udbredt</li> </ul>"},{"location":"intronodejs.html#npm","title":"NPM","text":"<p>Der findes et hav af 3. parts pakker som kan kombineres p\u00e5 alle m\u00e5de</p> <p>https://www.npmjs.com/</p> <p>Pakker som</p> <ul> <li>Express (k\u00e6mpe framework til at skabe serverside web apps)</li> <li>Async (hj\u00e6lp til async kode)</li> <li>Request (hj\u00e6lp til http)</li> <li>Browserify / WebPack (hj\u00e6lp til modul baseret udvikling og meget mere)</li> <li>Grunt (task runner)</li> <li>Socket.io (socket kommunikation)</li> <li>Commander (console)</li> <li>Mocha (test)</li> <li>UnderscoreJS (arrays mv)</li> <li>Passport (authentication)</li> <li>NodeMailer (mail)</li> <li>React / Angular / Vue (SPA apps)</li> <li>Karma (test)</li> <li>MySql/Mongo (DB)</li> <li>LESS (kompilering CSS)</li> <li>JSHint/TSHint (linter)</li> </ul> <p>NPM er en del af NodeJS installationen.</p>"},{"location":"intronodejs.html#en-node-applikation","title":"En Node-applikation","text":"<p>Best\u00e5r typisk af en mappe med f\u00f8lgende filer</p> <ul> <li>package.json</li> <li>fil med info om applikationen, source control, hvilke pakker der benyttes samt eventuelle scripts</li> <li>.gitignore (eller anden source control ignore file)</li> <li>de filer som ignoreres af source control</li> <li>jslint.json eller tslint.json</li> <li>konfiguration af lintere</li> <li>jsconfig.json, tsconfig.json eller lign.</li> <li>ops\u00e6tning til kompiler/transpiler</li> </ul>"},{"location":"intronodejs.html#start-en-node-applikation-uden-git","title":"Start en node-applikation (uden git)","text":"<p>I en tom mappe (typisk med navngivet efter applikationen</p> <pre><code>npm init \n</code></pre> <p>og besvar diverse sp\u00f8rgsm\u00e5l.</p>"},{"location":"intronodejs.html#eksempel-pa-en-simpel-node-applikation","title":"Eksempel p\u00e5 en simpel node-applikation","text":"<p>Hent</p> <p>devcronberg/nodedemo</p> <p>og l\u00e6s readme</p>"},{"location":"introprogrammering.html","title":"Introduktion til programmering","text":"<p>Form\u00e5let med programmering er, at skabe en samling instruktioner for at automatisere en process p\u00e5 en computer (typisk afviklet i et standardiseret operativsystem).</p>"},{"location":"introprogrammering.html#den-korte-historie","title":"Den korte historie","text":"<ul> <li>Har r\u00f8dder helt tilbage til Charles Babbage\u2019s mekaniske computer kaldet Analytical Engine fra omkring 1837 (183 \u00e5r siden). Her skrev Ada Lovelace i 1843 det f\u00f8rste (teoretiske) computerprogram</li> </ul> <ul> <li>Herman Hollerith skabte omkring 1885 (135 \u00e5r siden) sin programmerbare \u201cElectromechanical punched card tabulator\u201d som blev brugt til folkeopt\u00e6lling. Hans firma blev senere (1925) omd\u00f8bt til IBM.</li> </ul> <ul> <li>Under 2. verdenskrig dukkede de f\u00f8rste elektroniske computere op </li> <li>Tyskernes Z3-computer baseret p\u00e5 rel\u00e6er</li> <li>Engl\u00e6ndernes Bombe brugt til at bryde tyskernes Enigma kodemaskine. Skabt blandt andet af Alan Turing, som har haft k\u00e6mpe indflydelse p\u00e5 computer teknologi<ul> <li>Udgav en del afhandling, og beskrev blandt andet Turing Machine hvis teorier satte IT teknologien igang</li> <li>Se filmen The Imitation Game</li> </ul> </li> </ul> <ul> <li>1952 blev den f\u00f8rste (britiske) kommercielle computer udviklet - Ferranti Mark I</li> <li>I 1960\u2019erne udviklere MIT og NASA operativsystemerne bag Apollo-missionerne</li> <li>Ikonisk billede af Margaret Hammilton med source koden til Apollo skevet i Assembler</li> </ul>"},{"location":"introprogrammering.html#begreber-inden-for-softwareudvikling","title":"Begreber inden for softwareudvikling","text":"<ul> <li>Instruktioner til CPU skrives i kildekode/source code</li> <li>Der findes et hav af forskellige programmeringssprog</li> <li>Kildekode kompileres herefter til en for processoren forst\u00e5elige instruktioner</li> <li>Det er som alt muligt andet et h\u00e5ndv\u00e6rk at \u201cskrive kode\u201d<ul> <li>Programmeringsparadigmer</li> <li>Iterativ</li> <li>Procedural</li> <li>Objektorientert</li> <li>Funktionsorienteret</li> <li>Opm\u00e6rkningsbaseret</li> <li>Visuelt</li> <li>IT Arkitektur</li> </ul> </li> <li>Programmering handler typisk om at styre programpointeren til at afvikle instruktioner, og alle moderne programmeringssprog indeholder typisk (i en eller anden form)</li> <li>Variabler</li> <li>Flow instruktioner<ul> <li>L\u00f8kker</li> <li>Betingelser</li> </ul> </li> <li>Metoder/Funktioner</li> <li>Der kan opst\u00e5 fejl i koden - ogs\u00e5 kaldet bugs</li> <li>Ikonisk billede af \u201cen bug\u201d fra en rel\u00e6 computer (MARK II) i 1946. Bug fundet af [Grace Hopper] - en af pionerne bag programmeringssprog (herunder COBOL)</li> </ul> <ul> <li>Fejlfinding / debugging er derfor en stor del af software udvikling.</li> <li>Applikationer testes p\u00e5 forskellig vis</li> <li>Unit test</li> <li>UI test</li> <li>Integration test</li> </ul>"},{"location":"introprogrammering.html#prv-det-selv","title":"Pr\u00f8v det selv","text":"<p>Software udvikling kan godt - i begr\u00e6nset form - ske visuelt.</p> <p>Pr\u00f8v selv p\u00e5 Hour of Code - eksempelvis blockly.games. </p> <p></p> <p>Alternativ AppInventor - Android (og iOS), eller MicroBit.</p>"},{"location":"introprogrammering.html#talsystemer","title":"Talsystemer","text":"<p>Den klassiske computer er baseret p\u00e5 det bin\u00e6re talsystem</p> <ul> <li>til/fra</li> <li>sp\u00e6nding/ikke sp\u00e6nding</li> </ul> <p>Baseret p\u00e5 to v\u00e6rdier (typisk 0 og 1) kan man repr\u00e6sentere alle tal (hvis man har plads nok)</p>"},{"location":"introprogrammering.html#den-lille-tabel","title":"Den lille tabel","text":""},{"location":"introprogrammering.html#lr-det-binre-talsystem-pa","title":"L\u00e6r det bin\u00e6re talsystem p\u00e5","text":"<ul> <li>csdemo om nummersystemer</li> <li>Quiz hos csdemo om konvertering til bin\u00e6re tal</li> </ul>"},{"location":"introprogrammering.html#betegnelser","title":"Betegnelser","text":"<ul> <li>1 = bit</li> <li>4 = nibble</li> <li>8 = byte</li> <li>8/16/32/64 = word</li> </ul>"},{"location":"introprogrammering.html#forkortelser","title":"Forkortelser","text":""},{"location":"introprogrammering.html#bit","title":"Bit","text":"<ul> <li>1 Kb = 1.024 bit (128 bytes)</li> <li>1 Mb = 1.048.576 bit </li> <li>1 Gb = 1.073.741.824 bit </li> <li>1 Tb = 1.099.511.627.776 bit </li> </ul>"},{"location":"introprogrammering.html#bytes","title":"Bytes","text":"<ul> <li>1 KB = 1.024 bytes</li> <li>1 MB = 1.048.576 bytes</li> <li>1 GB = 1.073.741.824 bit </li> <li>1 TB = 1.099.511.627.776 bit </li> </ul>"},{"location":"introprogrammering.html#binr-aritmetik","title":"Bin\u00e6r aritmetik","text":"<p>Man kan foretage alle former for beregninger i det bin\u00e6re talsystem ligesom i det decimale talsystem - eksempelvis addition</p> <p></p> <p></p> <p>Se eksempler p\u00e5 forskellige typer af beregninger hos WikiPedia.</p>"},{"location":"introprogrammering.html#det-hexadecimale-talsystem","title":"Det hexadecimale talsystem","text":"<p>I IT teknologier vil du ogs\u00e5 m\u00f8de det hexadecimale talsystem som t\u00e6ller 0-15</p> <p></p>"},{"location":"introprogrammering.html#lr-det-hexadecimale-talsystem-pa","title":"L\u00e6r det hexadecimale talsystem p\u00e5","text":"<ul> <li>csdemo om nummersystemer</li> <li>Quiz hos csdemo om konvertering til hexadecimale tal</li> </ul>"},{"location":"introprogrammering.html#typer-af-tal","title":"Typer af tal","text":"<p>Generelt findes der heltal (signed (-+) og unsigned (+)) og kommatal.</p>"},{"location":"introprogrammering.html#heltal","title":"Heltal","text":"Type Bites Sp\u00e6nd Lille positivt heltal 8 0 til 255 Stort positivt heltal 16 0 til 65.536 Meget stort positivt heltal 64 0 til 18.446.744.073.709.551.616 Stort positivt og negativt heltal 32 -2.147.483.648 til +2.147.483.647"},{"location":"introprogrammering.html#kommatal","title":"Kommatal","text":"<p>Der er flere m\u00e5der at beskrive et kommatal p\u00e5. De fleste CPU\u2019er har indbygget floating point repr\u00e6sentation, som er en m\u00e5de at beskrive et kommatal. Det er super hurtigt men ikke helt pr\u00e6cist p\u00e5 de yderste decimaler. Konvertering til floating point kan v\u00e6re ret kompleks men denne artikel forklarer det ret godt. </p> <p>De fleste programmeringssprog tilbyder ogs\u00e5 andre muligheder for repr\u00e6sentation af kommatal.</p>"},{"location":"introprogrammering.html#udfordringer","title":"Udfordringer","text":"<p>Hvis der v\u00e6lges forkerte typer af heltal og kommatal kan det skabe fejl som kan v\u00e6re sv\u00e6re at finde. Se eksempelvis Engineering Disasters 13 - Software Flaws p\u00e5 YouTube. Her beskrives eksempelvis software fejl i amerikanernes Patriot missiler under Golfkrigen i starten af 90\u2019erne.</p>"},{"location":"introprogrammering.html#kontakter","title":"Kontakter","text":"<p>Alle processorer er skabt af \u201ckontakter\u201d.</p> <p>Her en simpel kontakt som skal v\u00e6re \u201ctil\u201d for at aktivere en magnet.</p> <p></p> <p>Her et kredsl\u00f8b med to kontakter hvor begge input skal v\u00e6re \u201ctil\u201d for at lampen lyser.</p> <p></p> <p></p> <p>Og her et kredsl\u00f8b med to kontakter hvor blot en af kontakterne skal v\u00e6re \u201ctil\u201d for at lampen lyser.</p> <p></p> <p></p> <p>(Alle tegninger er fra den forrygende bog Code: The Hidden Language of Computer Hardware and Software af Charles Petzold som i den grad kan anbefales hvis du vil vide mere om hvordan en computer/cpu fungerer.)</p>"},{"location":"introprogrammering.html#rel","title":"Rel\u00e6","text":"<p>Bell Laboratories relay computer for U.S. Army (1946)</p> <p> </p>"},{"location":"introprogrammering.html#vakuumrr","title":"Vakuumr\u00f8r","text":"<p>Forskellige typer af vakuumr\u00f8r</p> <p> </p>"},{"location":"introprogrammering.html#transistor","title":"Transistor","text":"<p>I 1950\u2019erne blev \u201ckontakterne\u201d digitale. Se denne gode dokumentar om opfindelsen af transitoreren</p> <p> </p>"},{"location":"introprogrammering.html#logiske-kredslb","title":"Logiske kredsl\u00f8b","text":"<p>Logiske kredsl\u00f8b er grundlaget for alt computer teknologi, og g\u00f8r det muligt at regne og huske.</p> <ul> <li>NOT</li> <li>AND</li> <li>OR</li> <li>XOR</li> <li>NAND</li> <li>NOR</li> <li>XNOR</li> </ul>"},{"location":"introprogrammering.html#sandhedstabeller","title":"Sandhedstabeller","text":"<p>Check https://csdemo.cronberg.dk/gates.html s\u00e5 du kan se hvordan de fungerer.</p>"},{"location":"introprogrammering.html#gates-af-elektronik","title":"Gates af elektronik","text":"<p>Alle gates er i virkeligheden ret simple rent elektronisk. En OR gates eksempelvis kan skabes af to transistorer.</p> <p></p>"},{"location":"introprogrammering.html#moores-lov","title":"Moores lov","text":"<p>Gordon E. Moore (Intel) forudsagde i 1970, at antallet af transistorer i processorer ville blive fordoble cirka hvert andet \u00e5r. P\u00e5 det tidspunkt kunne man proppe omkring et par tusinde transistorer i en chip. Hans forudsigelser har holdt nogenlunde stik i halvtreds \u00e5r, men nu begynder det at knibe. Komponenterne bliver s\u00e5 sm\u00e5 at man har sv\u00e6rt ved at holde styr p\u00e5 elektronerne.</p> <p></p> <p>Dog er der nye sp\u00e6ndende materialer p\u00e5 vej som b\u00e5de vil \u00f8je antallet af transistorer igen, og samtidigt g\u00f8re kredsl\u00f8b mere stabile og mindre varme. Is\u00e6r Grafen/Graphene er meget omtalt pt. Det er en form for carbon med kun et lag atomer, og er ufatteligt st\u00e6rk. De f\u00f8rste batterier er begyndt at dukke op i 2020 (https://www.youtube.com/watch?v=dnE1nO6o-do).</p>"},{"location":"introprogrammering.html#lidt-historie","title":"Lidt historie","text":"<p>Check lige George Boole (1815-1864) - ham alle IT udviklere b\u00f8r kende til.    - Far til boolsk algebra      - Logiske beregninger/formler med klasser/set af elementer (ikke tal) og operatorer som eksempelvis + (or), x (and) og 1 (not)</p> <p>Og check Claude Shannon (1916-2001), som videre udviklede George Boole\u2019s tanker til elektroniske kredsl\u00f8b omkring 1937.</p> <p>Og medens du er igang - John Bardeen (1908-1991), William Bradford Shockley (1910-1989) and Walter Houser Brattain (1902-1987) - som fik Nobel prisen i Fysik i 1956 for deres arbejde indenfor halvledere og transitorer.</p> <p>Og sluttelig Jack Kilby (1923-2005) som opfandt IC kredse i 1950\u2019erne (Nobel prisen i fysik i 2000). - George Boole - Claude Shannon</p>"},{"location":"introprogrammering.html#beregning-med-logiske-kredslb","title":"Beregning med logiske kredsl\u00f8b","text":"<p>N\u00e5r f\u00f8rst man har adgang til forskellige logiske kredsl\u00f8b kan man foretage alle typer af beregninger - startende med at l\u00e6gge to bit sammen uden mente</p> <p>https://csdemo.cronberg.dk/halfadder.html</p> <p>og to bit sammen med mente</p> <p>https://csdemo.cronberg.dk/fulladder.html</p> <p>Og hvis man kan l\u00e6gge to bit sammen kan man l\u00e6gge tre bit sammen, og fire bit sammen, og \u2026</p>"},{"location":"introprogrammering.html#alu-arithmetic-logic-unit","title":"ALU (Arithmetic logic unit)","text":"<p>Er komponenten i en processor som typisk foretager beregninger, logiske operationer og sammenligninger</p> <p>Her en SN74A181N.</p> <p></p> <p>Her er datasheet for kredsen, og her skemaet for samme - bem\u00e6rk de mange gates.</p> <p></p>"},{"location":"introprogrammering.html#hukommelse","title":"Hukommelse","text":"<p>Kombinationen af logiske kredsl\u00f8b (og typisk en clock) kan skabe hukommelse - der er mange forskellige typer.</p> <p>Kredsl\u00f8b bruges til sm\u00e5 registre, RAM og ROM mv</p>"},{"location":"introprogrammering.html#or-latch","title":"OR Latch","text":""},{"location":"introprogrammering.html#set-reset-and-or-latch","title":"Set Reset AND-OR latch","text":"<p>En af de mere simple Set Reset latch er SR AND-OR latch\u2019en</p> <p></p> <p>Den kan du lege med p\u00e5 CS Demo</p>"},{"location":"introprogrammering.html#ram-intro","title":"RAM intro","text":"<p>RAM er opbygget s\u00e5ledes, at en konkret adresse indeholder en v\u00e6rdi - s\u00e5 en 8 bit RAM kunne se s\u00e5ledes ud.</p> <p></p> <p>N\u00e5r man benytter variabler i programmer er navnene p\u00e5 variablerne i virkeligheden blot en reference til en adresse i hukommelsen.</p> <p>Pr\u00f8v selv p\u00e5 https://csdemo.cronberg.dk/ram.html.</p>"},{"location":"introprogrammering.html#hjertet-i-en-cpu-clock","title":"Hjertet i en CPU (clock)","text":"<p>En CPU har en eller flere clock-kredsl\u00f8b som s\u00f8rger for at styre og time afvikling af operationer.</p> <p>I sin helt simple form bruges en timer-chip eller en krystal.</p>"},{"location":"introprogrammering.html#hertz","title":"Hertz","text":"<p>Hertz m\u00e5ler frekens - 1 Hz = 1 slag i sekundet</p> Forkortelse Beskrivelse hertz Hz hertz 1 kHz kilohertz 1.000 mHz megahertz 1.000.000 gHz gigahertz 1.000.000.000 ## En SAP (simple as possible) CPU <p>Skabt af Albert Paul Malvino i bogen Digital computer electronics</p> <p></p> <p>Ref</p> <ul> <li>Ben Eater\u2019s 8 bit computer</li> </ul>"},{"location":"introprogrammering.html#michells-sap1-simulering","title":"Michells SAP1 simulering","text":"<p>Du kan finde en simulering af SAP1 p\u00e5 devcronberg/sap-cpu</p> <p></p> <p>Det som er allervigtigst at forst\u00e5, er hvordan registrer og ALU kan p\u00e5virkes via kontrollinjer, og at disse kan p\u00e5virkes b\u00e5de manuelt samt gennem bin\u00e6re v\u00e6rdier.</p>"},{"location":"introprogrammering.html#opkoder-og-maskinkode","title":"opkoder og maskinkode","text":"<p>P\u00e5 sitet findes andre versioner af CPU\u2019en s\u00e5 det er nemmere at forst\u00e5</p> <ul> <li>Registre</li> <li>ALU</li> <li>RAM</li> <li>Kontrollinjer</li> <li>Mikroinstruktioner</li> <li>Opkoder</li> </ul> <p>Den sidste version af computeren introducerer Assembler som en direkte overs\u00e6ttelse af opkoder til assembler.</p>"},{"location":"introprogrammering.html#altair","title":"Altair","text":"<p>Ref</p> <ul> <li>Altair 8800</li> <li>Altair 8800 simulator</li> <li>Instruktion</li> </ul>"},{"location":"introprogrammering.html#lg-2-to-tal-sammen-fra-ram","title":"L\u00e6g 2 to tal sammen fra RAM","text":"nr kommando v\u00e6rdi kommentar 00000000 LDA 00111010 Load til A fra 128 00000001 - 10000000 00000010 - 00000000 00000011 MOV 01000111 Flyt A -&gt; B 00000100 LDA 00111010 Load til A fra 129 00000101 - 10000001 00000110 - 00000000 00000111 ADD 10000000 L\u00e6g A og B sammen 00001000 STA 00110010 Flyt A til 130 00001001 - 10000010 00001010 - 00000000 00001011 JMP 11000011 Jump til 0 00001100 - 00000000 00001101 - 00000000"},{"location":"introprogrammering.html#digirule2","title":"Digirule2","text":"<p>Oprindeligt fra KickStarter - nu direkte hos Bradley Slattery</p> <p> </p>"},{"location":"introprogrammering.html#lg-2-to-tal-sammen-fra-ram_1","title":"L\u00e6g 2 to tal sammen fra RAM","text":"nr kommando v\u00e6rdi kommentar 00000000 COPYLR 00000011 copy 2 til ram pos 20 00000001 2 00000010 00000010 20 00010100 00000011 COPYLR 00000011 copy 2 til ram pos 21 00000100 2 00000010 00000101 21 00010101 00000110 COPYRA 00000110 copy ram pos 20 til a 00000111 20 00010100 00001000 ADDRA 00001001 add ram pos 21 til a 00001001 21 00010101 00001010 COPYAR 00000101 copy a til 255 (out) 00001011 255 11111111 00001100 jump 00011100 uendeligt loop 00001101 12 00001100"},{"location":"introprogrammering.html#moderne-processorer","title":"Moderne processorer","text":"<ul> <li>X86/X64 arkitektur</li> <li>X86 instruktioner</li> <li>ARM arkitektur</li> </ul>"},{"location":"introprogrammering.html#kompilere-og-programmeringssprog","title":"Kompilere og programmeringssprog","text":"<p>CPU niveau   - Maskinkode</p> <p>Lavniveau   - Maskinsprog Assembler</p> <p>H\u00f8jniveau</p> <ul> <li>COBOL</li> <li>C-sprog</li> <li> <p>.NET / JAVA</p> </li> <li> <p>H\u00f8j niveau sprog er typisk abstraktion p\u00e5 abstraktion p\u00e5 abstraktion</p> </li> <li> <p>Sprog der kompilere til et andet sprog der kompileres til et tredje sprog </p> </li> <li> <p>Kompilering til eksekvebar kode kaldes \u201ckompilering\u201d (compile) eller \u201cbyggesekvens\u201d (build)</p> </li> <li>Kompilering til andre sprog kaldes \u201ctranspilering\u201d</li> </ul> <p>Pr\u00f8v det selv p\u00e5 https://csdemo.cronberg.dk/compile.html.</p>"},{"location":"introprogrammering.html#programmeringssprog","title":"Programmeringssprog","text":"<ul> <li>1940: Assembly</li> <li>1950-60: COBOL, FORTRAN, Basic</li> <li>1970: Logo, Pascal, C, Smalltalk</li> <li>1980: C++, Eiffel, Perl, </li> <li>1990: Python, Java, Delphi, JavaScript, Ruby</li> <li>2000: C#, F#, Ruby on Rails </li> <li>2010: Dart</li> <li>2012: TypeScript</li> </ul> <p>De mest popul\u00e6re programmeringssprog - se StackOvewflow</p> <p>En del danskere har bidraget med programmeringssprog    - c++ (Bjarne Stroustrup)   - c#, delphi, pascal (Anders Hejlsberg)   - php (Rasmus Lerdorf)   - dart (Lars Bak og Kasper Lund)</p>"},{"location":"introprogrammering.html#syntaks-og-instruktioner","title":"Syntaks og instruktioner","text":"<ul> <li>De fleste sprog er forskellige i syntaks</li> <li>Alle best\u00e5r af instruktioner af en eller anden art</li> <li>Kildekode</li> <li>Opm\u00e6rkninger</li> <li>Grafisk</li> <li>Instruktioner er defineret p\u00e5 flere m\u00e5der</li> <li>Linjeskift</li> <li>Semikolon</li> <li>Tabulering</li> <li>Programpointer</li> <li>Flow i koden</li> <li>Instruktion til instruktion</li> <li>Linje til linje</li> <li>Funktion til funktion</li> </ul>"},{"location":"introprogrammering.html#eksempler-pa-syntaks","title":"Eksempler p\u00e5 syntaks","text":""},{"location":"introprogrammering.html#maskinkode","title":"Maskinkode","text":""},{"location":"introprogrammering.html#assembler","title":"Assembler","text":""},{"location":"introprogrammering.html#basic","title":"Basic","text":""},{"location":"introprogrammering.html#cobol","title":"Cobol","text":""},{"location":"introprogrammering.html#fortran","title":"Fortran","text":""},{"location":"introprogrammering.html#pascal","title":"Pascal","text":""},{"location":"introprogrammering.html#python","title":"Python","text":""},{"location":"introprogrammering.html#smalltalk","title":"Smalltalk","text":""},{"location":"introprogrammering.html#c","title":"C++","text":""},{"location":"introprogrammering.html#java","title":"Java","text":""},{"location":"introprogrammering.html#javascript","title":"JavaScript","text":""},{"location":"introprogrammering.html#f","title":"F","text":""},{"location":"introprogrammering.html#ruby","title":"Ruby","text":""},{"location":"introprogrammering.html#grundlggende-programmering","title":"Grundl\u00e6ggende programmering","text":"<p>De fleste programmeringssprog har features til f\u00e6lles</p> <ul> <li>Variabler</li> <li>Opbevaring af midlertidige v\u00e6rdier<ul> <li>Jf tidligere sektion om RAM</li> </ul> </li> <li>Flow instruktioner</li> <li>l\u00f8kker<ul> <li>loop et givet antal gange</li> </ul> </li> <li>betingelser<ul> <li>hvis et eller andet er sandt s\u00e5\u2026 ellers....</li> </ul> </li> <li>Funktioner</li> <li>Samling af instruktioner der nemt kan afvikles<ul> <li>med/uden argumenter</li> <li>med/uden returv\u00e6rdi</li> </ul> </li> </ul>"},{"location":"introprogrammering.html#typer-af-applikationer","title":"Typer af applikationer","text":"<ul> <li>Konsol</li> <li>Lokale GUI applikationer</li> <li>Web applikationer</li> <li>Web/Desktop</li> <li>Electron</li> <li>SOA</li> <li>Service-Oriented Architecture </li> <li>Mobile applikationer</li> <li>Embedded  </li> <li>PLC</li> <li>Espruino, Tessel.IO</li> <li>Rasberry Pie, Netdurino</li> <li>API / SDK</li> <li>application programming interface</li> <li>Test</li> <li>Unit test</li> <li>UI Test</li> <li>Integration test</li> </ul>"},{"location":"introprogrammering.html#udviklingsvrktjer","title":"Udviklingsv\u00e6rkt\u00f8jer","text":"<ul> <li>I de fleste programmeringssprog er kildekoden ren tekst</li> <li>Notepad</li> <li>Udviklingsmilj\u00f8er giver den bedste produktivitet</li> <li>\u201dVisuel\u201d kode</li> <li>L\u00f8bende baggrundskompilering</li> <li>Hj\u00e6lp til kodeskrivning</li> <li>Integration af forskellige v\u00e6rkt\u00f8jer</li> <li>Test</li> <li>Deployment</li> <li>Nogle af de kendte</li> <li>Visual Studio (.NET og meget meget)</li> <li>Visual Studio Code</li> <li>Eclipse (java +)</li> <li>Netbeans (java, c++, mv)</li> <li>gEdit (linux)</li> </ul>"},{"location":"introprogrammering.html#versionsource-control","title":"Version/source control","text":"<p>Source control - ogs\u00e5 kaldet version styring - benyttes prim\u00e6rt til styring af rettelser i kode. I dag kan de fleste systemer h\u00e5ndterer</p> <ul> <li>Rettelser</li> <li>Hvad er rettet</li> <li>Hvem har rettet</li> <li>Hvorn\u00e5r er der rettet</li> <li>Hvorfor er der rettet</li> <li>Versionstyring</li> <li>Branching</li> <li>Projektstyring</li> <li>Fejlrapportering </li> <li>Styring og automatisering af build</li> </ul> <p>Af kendte systemer findes</p> <ul> <li>Git</li> <li>Subversion</li> <li>Mercurial</li> </ul> <p>og de fleste v\u00e6lge at have sin \u201ckode i skyen\u201d - eksempelvis hos</p> <ul> <li>GitHub</li> <li>BitBucket</li> <li>AWS CodeCommit</li> <li>Microsoft Team Foundation Server</li> </ul>"},{"location":"introts.html","title":"Introduktion til TypeScript","text":"<p>TypeScript er et open-source programmeringssprog, der er bygget p\u00e5 JavaScript og har til form\u00e5l at tilf\u00f8je statisk typekontrol til JavaScript. Det blev oprindeligt udviklet af Microsoft og f\u00f8rste gang offentliggjort i 2012. TypeScript giver udviklere mulighed for at definere typer til variabler, funktioner og andre komponenter i deres kode, hvilket kan hj\u00e6lpe med at undg\u00e5 fejl og g\u00f8re koden nemmere at vedligeholde og forst\u00e5.</p> <p>Et simpelt eksempel p\u00e5 brug af TypeScript er at definere en variabel med en bestemt type, f.eks.</p> <p><pre><code>let navn: string = \"John Doe\";\n</code></pre> Et andet eksempel er at definere en funktion med specifikke parametre og en returtype:</p> <pre><code>function add(a: number, b: number): number {\nreturn a + b;\n}\n</code></pre> <p>I begge eksempler er typen angivet efter kolon. Det er ikke n\u00f8dvendigt at angive typen, men det giver udvikleren og andre, der arbejder med koden, mere information om, hvordan koden skal bruges og hvad den forventer at modtage som input og returnere som output.</p>"},{"location":"introts.html#kort","title":"Kort\u2026","text":"<ul> <li>http://www.typescriptlang.org</li> <li>Transpiler</li> <li>Skabt af blandt andet Anders Hejlsberg (C#, Delphi)</li> <li> <p>Historien bag TypeScript - se http://ithistorie.cronberg.dk</p> </li> <li> <p>Open Source</p> </li> <li>Microsoft/TypeScript</li> <li>Grundl\u00e6ggende features</li> <li>Superset af EcmaScript (alt ES er automatisk TS)</li> <li>Typest\u00e6rkt</li> <li>Transpiler nyere ES features tilbage til \u00e6ldre versioner af ES<ul> <li>Tillader brug af \u201cmoderne\u201d syntaks og features</li> </ul> </li> <li>St\u00e6rk support i udviklingmilj\u00f8er og tilh\u00f8rende v\u00e6rkt\u00f8jer</li> <li>Installeres typisk via NPM/Node (eller Visual Studio)</li> </ul>"},{"location":"introts.html#installering-via-node","title":"Installering via Node","text":"<p>K\u00f8r evt. som administator!</p> <pre><code>npm install typescript -g\n</code></pre> <p>R\u00e5 brug af transpiler</p> <pre><code>tsc helloworld.ts\n</code></pre> <p>Typisk benyttes en tsconfig.json fil</p> <pre><code>tsc --init\n</code></pre>"},{"location":"introts.html#udviklingmilj","title":"Udviklingmilj\u00f8","text":"<p>De fleste benytter VS Code med extensions.</p>"},{"location":"introts.html#den-hurtige-made-at-afvikledebuggelege-med-ts-og-node-i-vsc","title":"Den hurtige m\u00e5de at afvikle/debugge/lege med TS og node i VSC","text":"<p>devcronberg/ts-in-vsc</p>"},{"location":"introts.html#den-hurtige-made-at-afvikledebuggelege-med-ts-og-web-i-vsc","title":"Den hurtige m\u00e5de at afvikle/debugge/lege med TS og web i VSC","text":"<p>devcronberg/ts-in-parcel</p>"},{"location":"introvscode.html","title":"Introduktion til VS Code","text":""},{"location":"introvscode.html#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code (forkortet VSC) er p\u00e5 f\u00e5 \u00e5r blevet en af de mest benyttede teksteditorer til alle former for udvikling. I\u00a0Stack Overflow\u2019s unders\u00f8gelse\u00a0fra 2019 havde den overg\u00e5et b\u00e5de Visual Studio, Notepad++ og VIM.</p> <p>Den kan installeres p\u00e5 alle platforme fra</p> <p>https://code.visualstudio.com/</p> <p>og er skabt til udvikling med indbygget funktionalitet relateret til</p> <ul> <li>editering</li> <li>extensions</li> <li>git support</li> <li>brugertilpasning</li> </ul> <p>samtidigt er den super hurtig.</p> <p>Den er bygget i HTML, CSS og JavaScript p\u00e5\u00a0Electron platformen\u00a0af Microsoft.</p>"},{"location":"introvscode.html#video-installering-af-vsc-og-extensions","title":"Video: Installering af VSC og extensions","text":"Her er en kort video\u00a0som viser installation af VSC og en enkelt extension."},{"location":"introvscode.html#grundlggende-settings","title":"Grundl\u00e6ggende settings","text":"<p>P\u00e5 kan overvejer at s\u00e6tte VS op med</p> <ul> <li>Automatisk omd\u00f8bning af opm\u00e6rkninger<ul> <li>Linked editing under settings</li> </ul> </li> <li>\u00c5bn tom editor hver gang (uden tidligere filer)<ul> <li>Restore windows under settings</li> </ul> </li> </ul>"},{"location":"introvscode.html#dokumentation","title":"Dokumentation","text":"<p>Du b\u00f8r bruge noget tid p\u00e5 at l\u00e6se dokumentationen fra deres website - det er den bedste m\u00e5de at l\u00e6re om de forskellige features. Det vil spare mange timers udvikling. L\u00e6s (skim) blandt andet om</p> <ul> <li>Editering</li> <li>Extensions</li> <li>IntelliSense</li> <li>Code Navigation</li> <li>Refactoring</li> <li>Debugging</li> <li>Version Control</li> <li>Integrated Terminal</li> <li>Tasks</li> <li>Snippets</li> </ul>"},{"location":"introvscode.html#brug-af-vsc-til-html-udvikling","title":"Brug af VSC til HTML udvikling","text":"<p>Hvis du benytter VSC til HTML udvikling kan du optimere brugen p\u00e5 mange m\u00e5der.</p>"},{"location":"introvscode.html#emmet","title":"Emmet","text":"<p>Den st\u00f8rste feature er uden tvivl\u00a0Emmet\u00a0som du kan se som dynamiske snippets. Hvis du eksempelvis indtaster</p> <pre><code>h1\n</code></pre> <p>og trykker tabulering bliver det til</p> <pre><code>&lt;h1&gt;&lt;/h1&gt;\n</code></pre> <p>og s\u00e6tter cursoren det rigtige sted.</p> <p>Skriver du</p> <pre><code>div&gt;span\n</code></pre> <p>bliver det til</p> <pre><code>&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\n</code></pre> <p>Emmet benytter kendte templates fra CSS hvor eksempelvis # betyder id og . betyder klasse. S\u00e5ledes vil dette</p> <pre><code>div#d1&gt;span.c1\n</code></pre> <p>blive til</p> <pre><code>&lt;div id=\"d1\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/div&gt;\n</code></pre>"},{"location":"introvscode.html#wrap","title":"Wrap","text":"<p>Du kan ogs\u00e5 omkranse med opm\u00e6rkninger ved at bruge f1-menuen (Windows) og skrive wrap og v\u00e6lge \u201cWrap with appreviation\u201d og s\u00e5 skrive en emmet snippet. P\u00e5 den m\u00e5de kan</p> <pre><code>link\n</code></pre> <p>hurtigt blive til</p> <pre><code>&lt;a href=\"\" id=\"a1\"&gt;link&lt;/a&gt;\n</code></pre> <p>ved at skrive \u201ca#a1\u201d i \u201cWrap with appreviation\u201d.</p>"},{"location":"introvscode.html#actions","title":"Actions","text":"<p>P\u00e5 f1-menuen kan de mange \u201cactions\u201d findes ved at skrive \u201cemmet\u201d - pr\u00f8v eksempelvis \u201cUpdate image size\u201d som automatisk s\u00e6tte width og height.</p>"},{"location":"introvscode.html#egne-snippets","title":"Egne snippets","text":"<p>Du kan ogs\u00e5 oprette dine egne emmet snippets i VSC. Under settings skal du angive en mappe med snippets.</p>"},{"location":"introvscode.html#dokumentation_1","title":"Dokumentation","text":"<p>Det er kun toppen af isbjerget og du b\u00f8r bruge lidt tid p\u00e5 at lege med de mange muligheder. Se\u00a0https://docs.emmet.io/cheat-sheet.</p>"},{"location":"introvscode.html#eksempler-pa-emmet","title":"Eksempler p\u00e5 Emmet","text":"<p>Her er et par af mine mest benyttede snippets:</p> <pre><code>h1\n&lt;h1&gt;&lt;/h1&gt;\np&gt;lorem\n&lt;p&gt;Lorem ....&lt;/p&gt;\nnav&gt;ul&gt;li\n&lt;nav&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/nav&gt;\ndiv+p+bq\n&lt;div&gt;&lt;/div&gt;\n&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;&lt;/blockquote&gt;\nul&gt;li*5\n&lt;ul&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;/ul&gt;\ntable&gt;tr*3&gt;td*3\n&lt;table&gt;\n&lt;tr&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\nul&gt;li.item$*5\n&lt;ul&gt;\n&lt;li class=\"item1\"&gt;&lt;/li&gt;\n&lt;li class=\"item2\"&gt;&lt;/li&gt;\n&lt;li class=\"item3\"&gt;&lt;/li&gt;\n&lt;li class=\"item4\"&gt;&lt;/li&gt;\n&lt;li class=\"item5\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\nh$[title=item$]{Header $}*3\n&lt;h1 title=\"item1\"&gt;Header 1&lt;/h1&gt;\n&lt;h2 title=\"item2\"&gt;Header 2&lt;/h2&gt;\n&lt;h3 title=\"item3\"&gt;Header 3&lt;/h3&gt;\nul&gt;li.item$$$*5\n&lt;ul&gt;\n&lt;li class=\"item001\"&gt;&lt;/li&gt;\n&lt;li class=\"item002\"&gt;&lt;/li&gt;\n&lt;li class=\"item003\"&gt;&lt;/li&gt;\n&lt;li class=\"item004\"&gt;&lt;/li&gt;\n&lt;li class=\"item005\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\ndiv#header\n&lt;div id=\"header\"&gt;&lt;/div&gt;\ndiv.title\n&lt;div class=\"title\"&gt;&lt;/div&gt;\nform#search.wide\n&lt;form id=\"search\" class=\"wide\"&gt;&lt;/form&gt;\np.class1.class2.class3\n&lt;p class=\"class1 class2 class3\"&gt;&lt;/p&gt;\np[title=\"Hello world\"]\n&lt;p title=\"Hello world\"&gt;&lt;/p&gt;\ntd[rowspan=2 colspan=3 title]\n&lt;td rowspan=\"2\" colspan=\"3\" title=\"\"&gt;&lt;/td&gt;\na{Click me}\n&lt;a href=\"\"&gt;Click me&lt;/a&gt;\np&gt;{Click }+a{here}+{ to continue}\n&lt;p&gt;Click &lt;a href=\"\"&gt;here&lt;/a&gt; to continue&lt;/p&gt;\na:link\n&lt;a href=\"http://\"&gt;&lt;/a&gt;\nlink:css\n&lt;link rel=\"stylesheet\" href=\"style.css\" /&gt;\n</code></pre>"},{"location":"introvscode.html#extensions","title":"Extensions","text":"<p>Der findes mange extensions relateret til HTML - her er nogle af dem jeg benytter</p> <ul> <li>Live Server (ritwickdey.liveserver)<ul> <li>Indbygget web server</li> </ul> </li> <li>Prettier (esbenp.prettier-vscode)<ul> <li>Formatering af blandt andet HTML</li> <li>S\u00e6t evt \u201cFormat On Save\u201d s\u00e5 der formateret n\u00e5r du gemmer filer</li> </ul> </li> <li>HTMLHint (mkaufman.htmlhint)<ul> <li>Kontrol af opm\u00e6rkning mod et s\u00e6t regler (ikke W3C)</li> </ul> </li> <li>Encode Decode (mitchdenny.ecdc)<ul> <li>encoding af eksempelvis \u00f8 til \u00f8</li> </ul> </li> <li>W3C Web Validator<ul> <li>Validering mod W3C</li> </ul> </li> </ul>"},{"location":"introvscode.html#snippets","title":"Snippets","text":"<p>Husk du kan nemt skabe dine egne snippets hvis der er nogle opm\u00e6rkninger du bruger meget.</p>"},{"location":"introvscode.html#brug-af-vsc-til-css-udvikling","title":"Brug af VSC til CSS udvikling","text":"<p>Hvis du benytter VSC til CSS udvikling kan du optimere brugen p\u00e5 mange m\u00e5der.</p>"},{"location":"introvscode.html#emmet_1","title":"Emmet","text":"<p>Der findes en masse snippets relateret til CSS. Eksempelvis vil</p> <pre><code>bg\n</code></pre> <p>blive til</p> <pre><code>background: #000;\n</code></pre> <p>eller</p> <pre><code>m20\n</code></pre> <p>til</p> <pre><code>margin: 20px;\n</code></pre> <p>Se de mangle muligheder p\u00e5\u00a0https://docs.emmet.io/cheat-sheet</p>"},{"location":"introvscode.html#extensions_1","title":"Extensions","text":"<p>Der findes mange extensions relateret til CSS - herunder er nogle af dem jeg selv bruger</p> <ul> <li>Prettier (esbenp.prettier-vscode)<ul> <li>Formatering af CSS mv</li> </ul> </li> <li>HTML CSS Support (ecmel.vscode-html-css)<ul> <li>Hj\u00e6lp til CSS id/klasse i opm\u00e6rkninger</li> </ul> </li> <li>cdnjs (JakeWilson.vscode-cdnjs)<ul> <li>Nem tilgang til css/script fra cndjs</li> </ul> </li> </ul>"},{"location":"introvscode.html#brug-af-vsc-til-jsts-udvikling","title":"Brug af VSC til JS/TS udvikling","text":"<p>Hvis du benytter VSC til JavaScript og TypeScript udvikling kan du optimere brugen p\u00e5 mange m\u00e5der. Start med at l\u00e6se\u00a0https://code.visualstudio.com/docs/languages/javascript\u00a0for at se alle mulighederne.</p>"},{"location":"introvscode.html#snippets_1","title":"Snippets","text":"<p>Der findes et hav af\u00a0snippets\u00a0i VSC til .js og .ts filer, og det er nemt at skabe sine egne. Her er et par af de mest benyttede:</p> <pre><code>for (for l\u00f8kke)\nif (betingelse)\nifelse (betingelse)\ncw (console.log)\n</code></pre>"},{"location":"introvscode.html#extensions_2","title":"Extensions","text":"<p>Jeg har f\u00f8lgende extensions installeret</p> <ul> <li>Live Server (ritwickdey.liveserver)<ul> <li>Indbygget web server</li> </ul> </li> <li>Visual Studio IntelliCode (visualstudioexptteam.vscodeintellicode)<ul> <li>Udvidet intellicense</li> </ul> </li> <li>Prettier (esbenp.prettier-vscode)<ul> <li>Formatering af blandt andet HTML</li> <li>S\u00e6t evt \u201cFormat On Save\u201d s\u00e5 der formateret n\u00e5r du gemmer filer</li> </ul> </li> <li>ESLint (dbaeumer.vscode-eslint)<ul> <li>Linter</li> </ul> </li> <li>TSLint (ms-vscode.vscode-typescript-tslint-plugin)<ul> <li>Linter</li> </ul> </li> <li>Debugger for Chrome (msjsdiag.debugger-for-chrome)</li> <li>Vetur (octref.vetur)<ul> <li>Vue udvikling (men der findes ogs\u00e5 til Angular, React mv)</li> </ul> </li> <li>cdnjs (JakeWilson.vscode-cdnjs)<ul> <li>Nem tilgang til css/script fra cndjs</li> </ul> </li> <li>Bracket Pair Colorizer 2 (CoenraadS.bracket-pair-colorizer-2)<ul> <li>Farve p\u00e5 tuborgklammer</li> </ul> </li> <li>indent-rainbow (oderwat.indent-rainbow)<ul> <li>Visuel indrykning</li> </ul> </li> </ul>"},{"location":"introvscode.html#debugging","title":"Debugging","text":"<p>Debuggeren i VSC er helt forrygende og du skal l\u00e6se lidt om den p\u00e5\u00a0https://code.visualstudio.com/docs/languages/javascript#_debugging</p>"},{"location":"introvscode.html#brug-af-vsc-til-c-udvikling","title":"Brug af VSC til C# udvikling","text":"<p>Hvis du arbejder med VSC til C# udvikling er det is\u00e6r snippets, extensions, og debuggeren som er interessant at se n\u00e6rmere p\u00e5. Start med at l\u00e6se\u00a0https://code.visualstudio.com/docs/languages/csharp.</p>"},{"location":"introvscode.html#snippets_2","title":"Snippets","text":"<p>De samme snippets man kender fra Visual Studio er ogs\u00e5 tilg\u00e6ngelige i Visual Studio Code - eksempelvis:</p> <pre><code>for (l\u00f8kke)\nif (betingelse)\nclass (klasse)\n</code></pre> <p>og s\u00e5 videre.</p>"},{"location":"introvscode.html#extensions_3","title":"Extensions","text":"<p>F\u00f8lgende extensions har jeg installeret</p> <ul> <li>C# (ms-dotnettools.csharp)<ul> <li>N\u00f8dvendig for C# udvikling</li> </ul> </li> <li>Code Runner (formulahendry.code-runner)<ul> <li>Afvikling af kode (herunder C#) direkte i VSC</li> </ul> </li> </ul>"},{"location":"introvuejs.html","title":"Introduktion til VueJS","text":"<p>Vue er et SPA framework som kan sammenlignes med Angular og React, men er noget mere simpelt at l\u00e6re.</p> <p>Vue er skabt af Evan You (tidligere Google/Angular) i 2013, og n\u00e6rmer sig sine konkurrenter i popularitet.</p> <p>Se http://ithistorie.cronberg.dk og Stack Overflow Survey</p>"},{"location":"introvuejs.html#brug-af-vue","title":"Brug af Vue","text":"<p>Vue kan - i mods\u00e6tning til andre SPA frameworks - benyttes p\u00e5 flere m\u00e5der. Den simple m\u00e5de er brug af et eller flere vue instance\u2019s og databinding direkte p\u00e5 en html-side/js-fil. Den mere avancerede m\u00e5de kr\u00e6ver en bundler som vue-cli, parcel eller lign., og giver mulighed for at skabe en \u201crigtig\u201d komponent- og rutebaseret SPA applikation. </p>"},{"location":"introvuejs.html#brug-af-vue-uden-bundler","title":"Brug af Vue uden bundler","text":"<p>Nemmeste m\u00e5de at komme i gang med Vue er direkte link til et CDN fra en HTML-side. Styring af data mv sker ved hj\u00e6lp af en instans af Vue-klassen, som er bundet til et element. I sin helt simple form:</p> <pre><code>var app = new Vue({\nel: \"#...\",\ndata: {\n...\n},\n});\n</code></pre> <p>Her er et mere komplet eksempel:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Vue demo&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Simple demo af en Vue-instance&lt;/h1&gt;\n&lt;div id=\"app\"&gt;\n&lt;p&gt;{{ data_text }}&lt;/p&gt;\n&lt;p&gt;{{ computed_text }}&lt;/p&gt;\n&lt;p&gt;{{ method_text() }}&lt;/p&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nvar app = new Vue({\nel: \"#app\",\ndata: {\n// data (felter)\ndata_text: \"1\",\n},\ncomputed: {\n// egenskab (mulighed for cache hvis data ikke er \u00e6ndret og dermed bedre styring fra vue)\ncomputed_text: function () {\nreturn this.data_text + \"2\";\n},\n},\nmethods: {\n// metoder\nmethod_text: function () {\nreturn this.computed_text + \"3\";\n},\n},\n});\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introvuejs.html#databinding","title":"Databinding","text":"<p>Databinding kan ske enten i \u201cr\u00e5\u201d form med {{ \u2026 }} eller ved hj\u00e6lp af direktiver som v-bind. Her er eksempler p\u00e5 brug af flere former for databinding:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Simpel databinding&lt;/h1&gt;\n&lt;div id=\"app\"&gt;{{ message }}&lt;/div&gt;\n&lt;h1&gt;Brug af v-bind&lt;/h1&gt;\n&lt;div id=\"app-2\"&gt;\n&lt;span v-bind:title=\"message\"&gt;\n        Hover your mouse over me for a few seconds to see my dynamically bound title!\n      &lt;/span&gt;\n&lt;/div&gt;\n&lt;h1&gt;Brug af v-if&lt;/h1&gt;\n&lt;div id=\"app-3\"&gt;\n&lt;span v-if=\"seen\"&gt;Now you see me&lt;/span&gt;\n&lt;/div&gt;\n&lt;h1&gt;Brug af v-for&lt;/h1&gt;\n&lt;div id=\"app-4\"&gt;\n&lt;ol&gt;\n&lt;li v-for=\"todo in todos\"&gt;{{ todo.text }}&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;\n&lt;h1&gt;Brug af h\u00e6ndelser&lt;/h1&gt;\n&lt;div id=\"app-5\"&gt;\n&lt;p&gt;{{ message }}&lt;/p&gt;\n&lt;button v-on:click=\"reverseMessage\"&gt;Reverse Message 1&lt;/button&gt;\n&lt;button @click=\"reverseMessage\"&gt;Reverse Message 2&lt;/button&gt;\n&lt;/div&gt;\n&lt;h1&gt;Brug af v-model&lt;/h1&gt;\n&lt;div id=\"app-6\"&gt;\n&lt;p&gt;{{ message }}&lt;/p&gt;\n&lt;input v-model=\"message\" /&gt;\n&lt;/div&gt;\n&lt;h1&gt;Simpel komponent&lt;/h1&gt;\n&lt;div id=\"app-7\"&gt;\n&lt;ol&gt;\n&lt;todo-item v-for=\"item in groceryList\" v-bind:todo=\"item\" v-bind:key=\"item.id\"&gt;&lt;/todo-item&gt;\n&lt;/ol&gt;\n&lt;/div&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nvar app = new Vue({\nel: \"#app\",\ndata: {\nmessage: \"Hello Vue!\",\n},\n});\nvar app2 = new Vue({\nel: \"#app-2\",\ndata: {\nmessage: \"You loaded this page on \" + new Date().toLocaleString(),\n},\n});\nvar app3 = new Vue({\nel: \"#app-3\",\ndata: {\nseen: true,\n},\n});\nvar app4 = new Vue({\nel: \"#app-4\",\ndata: {\ntodos: [\n{ text: \"Learn JavaScript\" },\n{ text: \"Learn Vue\" },\n{ text: \"Build something awesome\" },\n],\n},\n});\nvar app5 = new Vue({\nel: \"#app-5\",\ndata: {\nmessage: \"Hello Vue.js!\",\n},\nmethods: {\nreverseMessage: function () {\nthis.message = this.message.split(\"\").reverse().join(\"\");\n},\n},\n});\nvar app6 = new Vue({\nel: \"#app-6\",\ndata: {\nmessage: \"Hello Vue!\",\n},\n});\nVue.component(\"todo-item\", {\nprops: [\"todo\"],\ntemplate: \"&lt;li&gt;{{ todo.text }}&lt;/li&gt;\",\n});\nvar app7 = new Vue({\nel: \"#app-7\",\ndata: {\ngroceryList: [\n{ id: 0, text: \"Vegetables\" },\n{ id: 1, text: \"Cheese\" },\n{ id: 2, text: \"Whatever else humans are supposed to eat\" },\n],\n},\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introvuejs.html#brug-af-vue-med-bundler","title":"Brug af Vue med bundler","text":"<p>Vue er et komponentbaseret framework med de fordele ifbm indkapsling som det giver, men det kr\u00e6ver en bundler. Den nemmeste er Parcel som ogs\u00e5 giver en masse andre muligheder. </p> <p>Se evt devcronberg/vueappdemo eller pr\u00f8v f\u00f8lgende:</p> <p>Start et nyt project i en tom mappe med</p> <pre><code>npm init\nnpm install parcel --save-dev\n</code></pre> <p>Pr\u00f8v nu f\u00f8lgende filer i roden</p>"},{"location":"introvuejs.html#indexhtml","title":"index.html","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Vue demo&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"app\"&gt;&lt;/div&gt;\n&lt;script src=\"./index.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introvuejs.html#indexjs","title":"index.js","text":"<pre><code>import Vue from \"vue\";\nimport App from \"./App.vue\";\nnew Vue({ render: (createElement) =&gt; createElement(App) }).$mount(\"#app\");\n</code></pre>"},{"location":"introvuejs.html#appvue","title":"app.vue","text":"<pre><code>&lt;template&gt;\n&lt;div&gt;\n&lt;div&gt;Demo af terning&lt;/div&gt;\n&lt;hr /&gt;\n&lt;terning&gt;&lt;/terning&gt;\n&lt;terning snyd=\"true\"&gt;&lt;/terning&gt;\n&lt;terning snyd=\"true\"&gt;&lt;/terning&gt;\n&lt;terning startV\u00e6rdi=\"1\"&gt;&lt;/terning&gt;\n&lt;terning startV\u00e6rdi=\"5\" snyd=\"true\"&gt;&lt;/terning&gt;\n&lt;terning startV\u00e6rdi=\"1\" snyd=\"false\"&gt;&lt;/terning&gt;\n&lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Vue from \"vue\";\nimport Terning from \"./terning.vue\";\nexport default Vue.extend({\ncomponents: {\nTerning: Terning,\n},\n});\n&lt;/script&gt;\n</code></pre>"},{"location":"introvuejs.html#terningvue","title":"terning.vue","text":"<pre><code>&lt;template&gt;\n&lt;div&gt;\n    [ &lt;span :class=\"{ sekser: erSekser }\"&gt;{{ v\u00e6rdi }}&lt;/span&gt; ] &lt;button @click=\"ryst\"&gt;Ryst&lt;/button&gt;\n&lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Vue from \"vue\";\nexport default Vue.extend({\ndata() {\nreturn {\nv\u00e6rdi: 1,\n};\n},\ncomputed: {\nerSekser: function() {\nreturn this.v\u00e6rdi == 6;\n},\n},\nprops: [\"startV\u00e6rdi\", \"snyd\"],\ncreated: function() {\nif (this.startV\u00e6rdi === undefined) this.ryst();\nelse this.v\u00e6rdi = this.startV\u00e6rdi;\n},\nmethods: {\nryst: function() {\nif (this.snyd === undefined || this.snyd === false) {\n// mellem 1-6\nthis.v\u00e6rdi = Math.floor(Math.random() * 6 + 1);\n} else {\n// mellem 5-6\nthis.v\u00e6rdi = Math.floor(Math.random() * 2 + 5);\n}\n},\n},\n});\n&lt;/script&gt;\n&lt;style scoped&gt;\n.sekser {\nbackground-color: green;\ncolor: white;\n}\ndiv {\nmargin: 5px;\n}\n&lt;/style&gt;\n</code></pre> <p>Tilret package.json med et script som eksempelvis dev</p> <pre><code>{\n\"name\": \"undervisning-vue\",\n\"version\": \"1.0.0\",\n\"description\": \"\",\n\"main\": \"index.js\",\n\"scripts\": {\n\"dev\": \"parcel dev index.html \"\n},\n\"author\": \"\",\n\"license\": \"ISC\",\n\"dependencies\": {\n\"vue\": \"^2.6.12\",\n},\n\"devDependencies\": {\n\"parcel\": \"^1.12.4\",\n}\n}\n</code></pre> <p>og pr\u00f8v at afvikle applikationen med </p> <pre><code>npm run dev\n</code></pre>"},{"location":"introwebapp.html","title":"Introduktion til web apps","text":"<p>Jo mere der kan afvikles p\u00e5 klienten (typisk browseren) jo bedre. Det vil spare ressourcer p\u00e5 serveren og g\u00f8re brugeroplevelsen bedre. Det var is\u00e6r biblioteket jQuery som kickstartede klientbaseret udvikling fordi det blev nemt og sikkert (i forhold til gamle browser versioner) at opdatere DOM, generere brugerflade elementer og foretage HTTP API kald.</p> <p>Hvis man ikke har behov for en server (m\u00e5ske bortset fra at levere statisk HTML, CSS og JavaScript) kan man sagtens benytte almindelig JavaScript eller biblioteker som jQuery til at skabe en applikation. Her er eksempelvis en side som beregner arealet p\u00e5 en firkant i almindelig JavaScript.</p>"},{"location":"introwebapp.html#eksempel-pa-en-ra-js-applikation","title":"Eksempel p\u00e5 en \u201cr\u00e5\u201d JS applikation","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Areal&lt;/title&gt;\n&lt;style&gt;\n.input span {\ndisplay: inline-block;\nwidth: 100px;\nmargin: 10px;\n}\nbutton {\nmargin: 10px;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Beregning af areal&lt;/h1&gt;\n&lt;div class=\"input\"&gt;\n&lt;div&gt;&lt;span&gt;L\u00e6ngde&lt;/span&gt;&lt;input id=\"l\u00e6ngde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Bredde&lt;/span&gt;&lt;input id=\"bredde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Areal&lt;/span&gt;&lt;input id=\"areal\" type=\"number\" readonly /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;button id=\"beregn\"&gt;Beregn&lt;/button&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;script&gt;\ndocument.querySelector(\"#beregn\").onclick = () =&gt; {\nlet l = parseFloat(document.querySelector(\"#l\u00e6ngde\").value);\nlet b = parseFloat(document.querySelector(\"#bredde\").value);\nlet a = l * b;\ndocument.querySelector(\"#areal\").value = a;\n};\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introwebapp.html#eksempel-pa-en-jquery-applikation","title":"Eksempel p\u00e5 en jQuery applikation","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Areal&lt;/title&gt;\n&lt;style&gt;\n.input span {\ndisplay: inline-block;\nwidth: 100px;\nmargin: 10px;\n}\nbutton {\nmargin: 10px;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Beregning af areal&lt;/h1&gt;\n&lt;div class=\"input\"&gt;\n&lt;div&gt;&lt;span&gt;L\u00e6ngde&lt;/span&gt;&lt;input id=\"l\u00e6ngde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Bredde&lt;/span&gt;&lt;input id=\"bredde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Areal&lt;/span&gt;&lt;input id=\"areal\" type=\"number\" readonly /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;button id=\"beregn\"&gt;Beregn&lt;/button&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(\"#beregn\").click(() =&gt; {\nlet l = parseFloat($(\"#l\u00e6ngde\").val());\nlet b = parseFloat($(\"#bredde\").val());\nlet a = l * b;\n$(\"#areal\").val(a);\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introwebapp.html#eksempel-pa-en-ra-spa-applikation","title":"Eksempel p\u00e5 en \u201cr\u00e5\u201d SPA applikation","text":"<p>I moderne applikationer vil man gerne holde brugeren p\u00e5 samme side for at g\u00f8re oplevelsen bedre og bevare tilstand. Pr\u00f8v f\u00f8lgende eksempel:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;title&gt;Areal&lt;/title&gt;\n&lt;style&gt;\n.input span {\ndisplay: inline-block;\nwidth: 100px;\nmargin: 10px;\n}\nbutton {\nmargin: 10px;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Beregning af areal&lt;/h1&gt;\n&lt;div&gt;[&lt;a href=\"#\" id=\"menuFirkant\"&gt;Firkant&lt;/a&gt;] [&lt;a href=\"#\" id=\"menuTrekant\"&gt;Trekant&lt;/a&gt;]&lt;/div&gt;\n&lt;section id=\"firkant\"&gt;\n&lt;h2&gt;Firkant&lt;/h2&gt;\n&lt;div class=\"input\"&gt;\n&lt;div&gt;&lt;span&gt;L\u00e6ngde&lt;/span&gt;&lt;input id=\"l\u00e6ngde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Bredde&lt;/span&gt;&lt;input id=\"bredde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Areal&lt;/span&gt;&lt;input id=\"arealf\" type=\"number\" readonly /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;button id=\"beregnf\"&gt;Beregn&lt;/button&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"trekant\"&gt;\n&lt;h2&gt;Trekant&lt;/h2&gt;\n&lt;div class=\"input\"&gt;\n&lt;div&gt;&lt;span&gt;H\u00f8jde&lt;/span&gt;&lt;input id=\"h\u00f8jde\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Grundlinje&lt;/span&gt;&lt;input id=\"grundlinje\" type=\"number\" /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;Areal&lt;/span&gt;&lt;input id=\"arealt\" type=\"number\" readonly /&gt;&lt;/div&gt;\n&lt;div&gt;&lt;button id=\"beregnt\"&gt;Beregn&lt;/button&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n// N\u00e5r siden loader vises firkant\n$(\"#trekant\").hide();\n$(\"input\").val(0);\n$(\"#menuFirkant\").click(() =&gt; {\n$(\"#trekant\").hide();\n$(\"#firkant\").show();\n$(\"input\").val(0);\n});\n$(\"#menuTrekant\").click(() =&gt; {\n$(\"#trekant\").show();\n$(\"#firkant\").hide();\n$(\"input\").val(0);\n});\n$(\"#beregnf\").click(() =&gt; {\nlet l = parseFloat($(\"#l\u00e6ngde\").val());\nlet b = parseFloat($(\"#bredde\").val());\nlet a = l * b;\n$(\"#arealf\").val(a);\n});\n$(\"#beregnt\").click(() =&gt; {\nlet h = parseFloat($(\"#h\u00f8jde\").val());\nlet g = parseFloat($(\"#grundlinje\").val());\nlet a = h * g * 0.5;\n$(\"#arealt\").val(a);\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre> <p>Det bliver dog hurtigt for komplekst selv at styre tilstand, links udefra (rute), sikkerhed, DOM manipulation med videre. Derfor findes de efterh\u00e5nden mange SPA frameworks.</p>"},{"location":"introwebapp.html#eksempel-pa-http-kald-ajax","title":"Eksempel p\u00e5 HTTP kald (AJAX)","text":"<p>Dette eksempel benytter b\u00e5de jQuery og underscore</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\" /&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n&lt;title&gt;Kommuner i DK&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Kommuner i Danmark&lt;/h1&gt;\n&lt;button&gt;Hent info om alle kommuner&lt;/button&gt;\n&lt;ul id=\"lst\" /&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.11.0/underscore-min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(\"button\").click(() =&gt; {\nconst ul = $(\"#lst\");\nul.empty();\nlet data = $.get(\"https://dawa.aws.dk/kommuner/\", (data) =&gt; {\n// skab et array af objekter med navn og kode (sk\u00e6rer resten fra)\nlet navne = _.map(data, (o) =&gt; ({\nnavn: o.navn,\nkode: o.kode,\n}));\nnavne.forEach((v) =&gt; {\nlet li = $(\"&lt;li/&gt;\").html(`${v.kode}: ${v.navn}`);\nul.append(li);\n});\n});\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"introwebapp.html#spa-applikationer","title":"SPA Applikationer","text":"<p>SPA er en forkortelse for Single Page Application. og man kan komme langt med udvikle egne simple \u201cenkelt side\u201d applikationer med r\u00e5 JavaScript eller eksempelvis jQuery. Men man l\u00f8ber hurtigt panden mod muren n\u00e5r applikationen vokser og kommer til at mangle hj\u00e6lp til </p> <ul> <li>komponentbaseret udvikling</li> <li>databinding</li> <li>links til funktioner - b\u00e5de interne og eksterne</li> <li>tilstand</li> <li>sikkerhed</li> <li>generelle udviklingsv\u00e6rkt\u00f8jer til fejlfinding mv</li> </ul> <p>Derfor findes der en del SPA frameworks der kan hj\u00e6lpe.</p>"},{"location":"introwebapp.html#forskellige-frameworks","title":"Forskellige frameworks","text":"<p>Der er is\u00e6r 5 framework som bliver brugt meget</p> <ul> <li>Angular (Google)</li> <li>React (Facebook)</li> <li>Vue</li> <li>Ember</li> <li>Svelte</li> </ul> <p>De er alle forskellige fra hinanden og det er lidt en religion hvilket framework man foretr\u00e6kker. Angular er nok mest brugt men er sammen med React nok ogs\u00e5 de sv\u00e6reste at l\u00e6re. Vue er noget nemmere at komme igang med.</p>"},{"location":"introwebapp.html#spa-udviklingsprocessen","title":"SPA udviklingsprocessen","text":"<p>En af de ting som g\u00f8r udviklingsprocessen kompleks i relation til SPA er applikationer er, at den komponentbaserede udvikling kr\u00e6ver brug af pakkemoduler som WebPack, Browserify eller Parcel. S\u00e5 det er typisk en relativ kompleks Node-applikation der skal skabes for at underst\u00f8tte en SPA udvikling. </p>"},{"location":"introwebapp.html#cli","title":"CLI","text":"<p>De fleste framework kommer med en CLI (Command Line Interface) som kan bruges til at</p> <ul> <li>Oprette applikationer</li> <li>Vedligeholde applikationer</li> <li>Afvikle applikationer</li> <li>Bygge applikationer</li> </ul>"},{"location":"introwebapp.html#eksempel-pa-en-spa","title":"Eksempel p\u00e5 en SPA","text":"<p>P\u00e5 </p> <p>devcronberg/vueappdemo</p> <p>finder du et simpelt eksempel p\u00e5 en Vue SPA der benytter </p> <ul> <li>node som udviklingsprocess</li> <li>komponenter</li> <li>databinding</li> <li>rute</li> </ul>"},{"location":"links.html","title":"Links fra kurset","text":"<p>Diverse links relateret til kurset (genereret 30-01-2023)</p>"},{"location":"links.html#html","title":"html","text":"<ul> <li>Chat GPT</li> <li>The W3C Markup Validation Service</li> <li>HTML5 standard</li> <li>Shoelace: Library of web components.</li> <li>Weaving the Web</li> <li>The best Favicon Generator (completely free) | Favicon.io</li> <li>Font Awesome Favicon Generator</li> <li>HTML5 Boilerplate: The web\u2019s most popular front-end template</li> <li>W3C Blog </li> <li>Hacker Newsletter </li> <li>K\u00e6mpe samling af links og ressourcer til Web UI</li> </ul>"},{"location":"links.html#css","title":"css","text":"<ul> <li>Chat GPT</li> <li>UIkit</li> <li>Bootstrap - HTML, CSS, and JS library</li> <li>Fomantic-UI</li> <li>Semantic UI</li> <li>Fomantic-UI CSS framework</li> <li>K\u00e6mpe samling af links og ressourcer til Web UI</li> <li>Tailwind CSS </li> </ul>"},{"location":"links.html#browsers","title":"browsers","text":"<ul> <li>Canary - Eksperimentel version af Chrome</li> <li>Safari - Apple</li> <li>Opera</li> <li>Google Chrome </li> <li>Firefox</li> <li>Microsoft Edge</li> <li>Brave Browser</li> </ul>"},{"location":"links.html#ai","title":"ai","text":"<ul> <li>Chat GPT</li> <li>OpenAI API</li> <li>MidJourney AI - Getting started</li> <li>Awesome chatgpt</li> <li>Awesome AI</li> <li>Demo Stable Diffusion Online </li> <li>16 Best Free AI Art Generators</li> </ul>"},{"location":"opgaver.html","title":"Indledning","text":"<p>Denne mappe indeholder forskellige opgaver du kan bruge til at \u00f8ve dig lidt.</p>"},{"location":"opgavercss.html","title":"Opgaver til CSS","text":"<p>Her er forskellige opgaver relateret til brug af CSS.</p>"},{"location":"opgavercss.html#opgaver","title":"Opgaver","text":"<ul> <li>Start</li> <li>CSS Diner</li> <li>Selector</li> <li>Tekst</li> <li>Box model</li> <li>Media typer</li> <li>Media query</li> <li>Animation</li> <li>SemanticUI</li> </ul>"},{"location":"opgaverdom.html","title":"Opgaver til DOM","text":"<p>Her er forskellige opgaver relateret til programmering mod browserens DOM (Document Object Model).</p>"},{"location":"opgaverdom.html#opgaver","title":"Opgaver","text":"<ul> <li>Hello World - klik p\u00e5 en knap for at \u00e6ndre en tekst</li> <li>Opret en liste - klik p\u00e5 en knap for at oprette en liste af data</li> <li>Regnemaskine - l\u00e6g to tal sammen </li> </ul>"},{"location":"opgaverhtml.html","title":"Opgaver til HTML","text":"<p>Her er forskellige opgaver relateret til brug af HTML.</p>"},{"location":"opgaverhtml.html#opgaver","title":"Opgaver","text":"<ul> <li>Start</li> <li>Semantik</li> <li>Tekst</li> <li>Billeder og links</li> <li>Lister</li> <li>Tabel</li> <li>Formularer</li> </ul>"},{"location":"opgaverjs.html","title":"Opgaver til JavaScript","text":"<p>Her finder du forskellige opgaver relateret til JavaScript.</p>"},{"location":"opgaverjs.html#opgaver","title":"Opgaver","text":"<ul> <li>Kom godt igang med Node og browser</li> <li>Simple variabler</li> <li>Skab en ti-tabel med for-l\u00f8kker</li> <li>Leg med array</li> <li>Simple funktioner</li> <li>Pr\u00f8v forskellige typer af funktioner</li> <li>Leg med en callback funktion</li> <li>Funktion der returnerer en funktion</li> <li>Simpelt brug af et objekt</li> <li>Brug af objekter</li> <li>Simpel klasse</li> <li>Brug af et eget udviklet eksternt modul gennem Node</li> <li>Terninger og b\u00e6ger</li> <li>Brug af et eksternt modul fra NPM gennem Node</li> <li>Brug af et eksternt modul gennem en browser</li> <li>Forskellige m\u00e5der at kode asynkront</li> <li>Brug af AJAX / Fetch</li> </ul>"},{"location":"opgaverjs.html#setup","title":"Setup","text":"<p>Det foruds\u00e6ttes, at du har installeret Node og VS Code med f\u00f8lgende extensions:</p> <ul> <li>Live Server</li> <li>Prettier</li> </ul> <p>Yderligere anbefales Chrome.</p>"}]}